dic = {'AND' : { 'Summary' : 'The Excel AND function is a logical function used to require more than one condition at the same time. AND returns either TRUE or FALSE. To test if a number in A1 is greater than zero and less than 10, use =AND(A1>0,A1<10). The AND function can be used as the logical test inside the IF function to avoid extra nested IFs, and can be combined with the OR function.', 'Purpose' : 'Test multiple conditions with AND', 'Return value' : 'TRUE if all arguments evaluate TRUE; FALSE if not', 'Arguments' : 'logical1 - The first condition or logical value to evaluate.logical2 - [optional] The second condition or logical value to evaluate.', 'Syntax' : '=AND(logical1, [logical2], ...)' },
'FALSE' : { 'Summary' : 'The Excel FALSE function returns the Boolean value FALSE. The FALSE function is classified as a "compatibility function", needed only for compatibility with other spreadsheet applications. There is no need to use FALSE() if you are creating a spreadsheet in Excel.', 'Purpose' : 'Generate the logical value FALSE', 'Return value' : 'The logical value FALSE', 'Arguments' : '', 'Syntax' : '=FALSE()' },
'IF' : { 'Summary' : 'The Excel IF function runs a logical test and returns one value for a TRUE result, and another for a FALSE result. For example, to "pass" scores above 70: =IF(A1>70,"Pass","Fail"). More than one condition can be tested by nesting IF functions. The IF function can be combined with logical functions like AND and OR to extend the logical test.', 'Purpose' : 'Test for a specific condition', 'Return value' : 'The values you supply for TRUE or FALSE', 'Arguments' : 'logical_test - A value or logical expression that can be evaluated as TRUE or FALSE.value_if_true - [optional] The value to return when logical_test evaluates to TRUE.value_if_false - [optional] The value to return when logical_test evaluates to FALSE.', 'Syntax' : '=IF(logical_test, [value_if_true], [value_if_false])' },
'IFERROR' : { 'Summary' : 'The Excel IFERROR function returns a custom result when a formula generates an error, and a standard result when no error is detected. IFERROR is an elegant way to trap and manage errors without using more complicated nested IF statements.', 'Purpose' : 'Trap and handle errors', 'Return value' : 'The value you specify for error conditions.', 'Arguments' : 'value - The value, reference, or formula to check for an error.value_if_error - The value to return if an error is found.', 'Syntax' : '=IFERROR(value, value_if_error)' },
'IFNA' : { 'Summary' : 'The Excel IFNA function is a simple way to trap and handle #N/A errors specifically without catching other errors. The IFNA function returns a custom result when a formula generates the #N/A error, and a normal result when no error is detected.', 'Purpose' : 'Trap and handle #N/A errors', 'Return value' : 'The value supplied for #N/A errors', 'Arguments' : 'value - The value, reference, or formula to check for an error.value_if_na - The value to return if #N/A error is found.', 'Syntax' : '=IFNA(value, value_if_na)' },
'IFS' : { 'Summary' : 'The Excel IFS function can run multiple tests and return a value corresponding to the first TRUE result. Use the IFS function to evaluate multiple conditions without multiple nested IF statements. IFS allows shorter, easier to read formulas.', 'Purpose' : 'Test multiple conditions, return first true', 'Return value' : 'Value corresponding with first TRUE result', 'Arguments' : 'test1 - First logical test.value1 - Result when test1 is TRUE.test2, value2 - [optional] Second test/value pair.', 'Syntax' : '=IFS(test1, value1, [test2, value2], ...)' },
'NOT' : { 'Summary' : 'The Excel NOT function returns the opposite of a given logical or Boolean value. When given TRUE, NOT returns FALSE. When given FALSE, NOT returns TRUE. Use the NOT function to reverse a logical value.', 'Purpose' : 'Reverse arguments or results', 'Return value' : 'A reversed logical value', 'Arguments' : 'logical - A value or logical expression that can be evaluated as TRUE or FALSE.', 'Syntax' : '=NOT(logical)' },
'OR' : { 'Summary' : 'The Excel OR function returns TRUE if any given argument evaluates to TRUE, and returns FALSE if all supplied arguments evaluate to FALSE. For example, to test A1 for either "x" or "y", use =OR(A1="x",A1="y"). The OR function can be used as the logical test inside the IF function to avoid nested IFs, and can be combined with the AND function.', 'Purpose' : 'Test multiple conditions with OR', 'Return value' : 'TRUE if any arguments evaluate TRUE; FALSE if not.', 'Arguments' : 'logical1 - The first condition or logical value to evaluate.logical2 - [optional] The second condition or logical value to evaluate.', 'Syntax' : '=OR(logical1, [logical2], ...)' },
'SWITCH' : { 'Summary' : 'The Excel SWITCH function compares one value against a list of values, and returns a result corresponding to the first match found. When no match is found, SWITCH can return an optional default value.', 'Purpose' : 'Match multiple values, return first match', 'Return value' : 'Result corresponding with first match', 'Arguments' : 'expression - The value or expression to match against.val1/result1 - The first value and result pair.val2/result2 - [optional] The second value and result pair.default - [optional] The default value to use when no match is found.', 'Syntax' : '=SWITCH(expression, val1/result1, [val2/result2], ..., [default])' },
'TRUE' : { 'Summary' : 'The Excel TRUE function returns the Boolean value TRUE. The TRUE function is classified as a "compatibility function", needed only for compatibility with other spreadsheet applications. There is no need to use TRUE() if you are creating a spreadsheet in Excel.', 'Purpose' : 'Generate the logical value TRUE', 'Return value' : 'The logical value TRUE', 'Arguments' : '', 'Syntax' : '=TRUE()' },
'XOR' : { 'Summary' : 'The XOR function performs what is called "exclusive OR". With two logical statements, XOR returns TRUE if either statement is TRUE, but returns FALSE if both statements are TRUE. If neither is TRUE, XOR also returns FALSE.', 'Purpose' : 'Perform exclusive OR', 'Return value' : 'TRUE or FALSE', 'Arguments' : 'logical1 - An expression, constant, or reference that evaluates to TRUE or FALSE.logical2 - [optional] An expression, constant, or reference that evaluates to TRUE or FALSE.', 'Syntax' : '=XOR(logical1, [logical2], ...)' },
'DATE' : { 'Summary' : 'The Excel DATE function creates a valid date from individual year, month, and day components. The DATE function is useful for assembling dates that need to change dynamically based on other values in a worksheet.', 'Purpose' : 'Create a date with year, month, and day', 'Return value' : 'A valid Excel date', 'Arguments' : 'year - Number for year.month - Number for month.day - Number for day.', 'Syntax' : '=DATE(year, month, day)' },
'DATEDIF' : { 'Summary' : 'The Excel DATEDIF function returns the difference between two date values in years, months, or days. The DATEDIF (Date + Dif) function is a "compatibility" function that comes from Lotus 1-2-3. For reasons unknown, it is only documented in Excel 2000, but you can use it in your formulas in all Excel versions since that time.', 'Purpose' : 'Get days, months, or years between two dates', 'Return value' : 'A number representing time between two dates', 'Arguments' : 'start_date - Start date in Excel date serial number format.end_date - End date in Excel date serial number format.unit - The time unit to use (years, months, or days).', 'Syntax' : '=DATEDIF(start_date, end_date, unit)' },
'DATEVALUE' : { 'Summary' : 'The Excel DATEVALUE function converts a date represented as a text string into a valid Excel date. For example, the formula =DATEVALUE("3/10/1975") returns a serial number (27463) in the Excel date system that represents March 10, 1975. Proper Excel dates are more useful than text dates since they can be directly manipulated with formulas and pivot tables .', 'Purpose' : 'Convert a date in text format to a valid date', 'Return value' : 'A valid Excel time as a serial number', 'Arguments' : 'date_text - A valid date in text format.', 'Syntax' : '=DATEVALUE(date_text)' },
'DAY' : { 'Summary' : 'The Excel DAY function returns the day of the month as a number between 1 to 31 from a given date. You can use the DAY function to extract a day number from a date into a cell. You can also use the DAY function to extract and feed a day value into another function, like the DATE function.', 'Purpose' : 'Get the day as a number (1-31) from a date', 'Return value' : 'A number (1-31) representing the day component in a date.', 'Arguments' : 'date - A valid Excel date.', 'Syntax' : '=DAY(date)' },
'DAYS' : { 'Summary' : 'The Excel DAYS function returns the number of days between two dates. With a start date in A1 and end date in B1, =DAYS(B1,A1) will return the days between the two dates.', 'Purpose' : 'Count days between dates', 'Return value' : 'A number representing days.', 'Arguments' : 'end_date - The end date.start_date - The start date.', 'Syntax' : '=DAYS(end_date, start_date)' },
'DAYS360' : { 'Summary' : 'The Excel DAYS360 function returns the number of days between two dates based on a 360-day year, where all months are assumed to have 30 days. For example, the formula =DAYS360("1-Jan-2021","31-Dec-2021") returns 360 days.', 'Purpose' : 'Get days between 2 dates in a 360-day year', 'Return value' : 'A number representing days.', 'Arguments' : 'start_date - The start date.end_date - The end date.method - [optional] Day count method. FALSE (default) = US method, TRUE = European method.', 'Syntax' : '=DAYS360(start_date, end_date, [method])' },
'EDATE' : { 'Summary' : 'The Excel EDATE function returns a date on the same day of the month, n months in the past or future. You can use EDATE to calculate expiration dates, maturity dates, and other due dates. Use a positive value for months to get a date in the future, and a negative value for dates in the past.', 'Purpose' : 'Shift date n months in future or past', 'Return value' : 'New date as Excel serial number', 'Arguments' : 'start_date - Start date as a valid Excel date.months - Number of months before or after start_date.', 'Syntax' : '=EDATE(start_date, months)' },
'EOMONTH' : { 'Summary' : 'The Excel EOMONTH function returns the last day of the month, n months in the past or future. You can use EOMONTH to calculate expiration dates, due dates, and other dates that need to land on the last day of a month. Use a positive value for months to move forward in time, and a negative number to move back in time.', 'Purpose' : 'Get last day of month n months in future or past', 'Return value' : 'Last day of month date', 'Arguments' : 'start_date - A date that represents the start date in a valid Excel serial number format.months - The number of months before or after start_date.', 'Syntax' : '=EOMONTH(start_date, months)' },
'HOUR' : { 'Summary' : 'The Excel HOUR function returns the hour component of a time as a number between 0-23. For example, with a time of 9:30 AM, HOUR will return 9. You can use the HOUR function to extract the hour into a cell, or feed the result into another formula, like the TIME function.', 'Purpose' : 'Get the hour as a number (0-23) from a Time', 'Return value' : 'A number between 0 and 23.', 'Arguments' : 'serial_number - A valid Excel time.', 'Syntax' : '=HOUR(serial_number)' },
'ISOWEEKNUM' : { 'Summary' : 'The Excel ISOWEEKNUM function takes a date and returns a week number (1-54) that follows ISO standards, where weeks begin on Monday and week number 1 is assigned to the first week in a year that contains a Thursday.', 'Purpose' : 'Get ISO week number for a given date', 'Return value' : 'A number between 1 and 54.', 'Arguments' : 'date - A valid Excel date in serial number format.', 'Syntax' : '=ISOWEEKNUM(date)' },
'MINUTE' : { 'Summary' : 'The Excel MINUTE function extracts the minute component of a time as a number between 0-59. For example, with a time of 9:45 AM, minute will return 45. You can use the MINUTE function to extract the minute into a cell, or feed the result into another function like the TIME function.', 'Purpose' : 'Get minute as a number (0-59) from time', 'Return value' : 'Number between 0 and 59.', 'Arguments' : 'serial_number - A valid date or time.', 'Syntax' : '=MINUTE(serial_number)' },
'MONTH' : { 'Summary' : 'The Excel MONTH function extracts the month from a given date as number between 1 to 12. You can use the MONTH function to extract a month number from a date into a cell, or to feed a month number into another function like the DATE function.', 'Purpose' : 'Get month as a number (1-12) from a date', 'Return value' : 'A number between 1 and 12.', 'Arguments' : 'serial_number - A valid Excel date.', 'Syntax' : '=MONTH(serial_number)' },
'NETWORKDAYS' : { 'Summary' : 'The Excel NETWORKDAYS function calculates the number of working days between two dates. NETWORKDAYS automatically excludes weekends (Saturday and Sunday) and can optionally exclude a list of holidays supplied as dates. ', 'Purpose' : 'Get the number of working days between two dates', 'Return value' : 'A number representing days.', 'Arguments' : 'start_date - The start date.end_date - The end date.holidays - [optional] A list of non-work days as dates.', 'Syntax' : '=NETWORKDAYS(start_date, end_date, [holidays])' },
'NETWORKDAYS.INTL' : { 'Summary' : 'The Excel NETWORKDAYS.INTL function calculates the number of working days between two dates. NETWORKDAYS.INTL can optionally exclude a list of holidays and provides a way to specify which days of the week are considered weekends.', 'Purpose' : 'Get work days between two dates', 'Return value' : 'A number representing days.', 'Arguments' : 'start_date - The start date.end_date - The end date.weekend - [optional] Setting for which days of the week should be considered weekends.holidays - [optional] A reference to dates that should be considered non-work days.', 'Syntax' : '=NETWORKDAYS.INTL(start_date, end_date, [weekend], [holidays])' },
'NOW' : { 'Summary' : 'The Excel NOW function returns the current date and time, updated continuously when a worksheet is changed or opened. The NOW function takes no arguments. You can format the value returned by NOW as a date, or as a date with time by applying a number format.', 'Purpose' : 'Get the current date and time', 'Return value' : 'A number representing the current date and time in Excel.', 'Arguments' : '', 'Syntax' : '=NOW()' },
'SECOND' : { 'Summary' : 'The Excel SECOND function returns the second component of a time as a number between 0-59. For example, with a time of 9:10:15 AM, second will return 15. You can use the SECOND function to extract the second into a cell, or feed the result into another formula, like the TIME function.', 'Purpose' : 'Get the Second as a number (0-59) from a Time', 'Return value' : 'A number between 0 and 59', 'Arguments' : 'serial_number - A valid time in a format Excel recognizes.', 'Syntax' : '=SECOND(serial_number)' },
'TIME' : { 'Summary' : 'The Excel TIME function is a built-in function that allows you to create a time with individual hour, minute, and second components. The TIME function is useful when you want to assemble a proper time inside another formula.', 'Purpose' : 'Create a time with hours, minutes, and seconds', 'Return value' : 'A decimal number representing a particular time in Excel.', 'Arguments' : 'hour - The hour for the time you wish to create.minute - The minute for the time you wish to create.second - The second for the time you wish to create.', 'Syntax' : '=TIME(hour, minute, second)' },
'TIMEVALUE' : { 'Summary' : 'The Excel TIMEVALUE function converts a time represented as text into a proper Excel time. For example, the formula =TIMEVALUE("9:00 AM") returns 0.375, the numeric representation of 9:00 AM in Excel\'s time system. Numeric time values are more useful than text since they can be directly manipulated with formulas and pivot tables.', 'Purpose' : 'Get a valid time from a text string', 'Return value' : 'A valid Excel time as a decimal number', 'Arguments' : 'time_text - A date and/or time in a text format recognized by Excel.', 'Syntax' : '=TIMEVALUE(time_text)' },
'TODAY' : { 'Summary' : 'The Excel TODAY function returns the current date, updated continuously when a worksheet is changed or opened. The TODAY function takes no arguments. You can format the value returned by TODAY with a date number format. If you need current date and time, use the NOW function.', 'Purpose' : 'Get the current date', 'Return value' : 'Excel date as a serial number', 'Arguments' : '', 'Syntax' : '=TODAY()' },
'WEEKDAY' : { 'Summary' : 'The Excel WEEKDAY function takes a date and returns a number between 1-7 representing the day of week. By default, WEEKDAY returns 1 for Sunday and 7 for Saturday, but this is configurable. You can use the WEEKDAY function inside other formulas to check the day of week.', 'Purpose' : 'Get the day of the week as a number', 'Return value' : 'A number between 0 and 7.', 'Arguments' : 'serial_number - The date for which you want to get the day of week.return_type - [optional] A number representing day of week mapping scheme. Default is 1.', 'Syntax' : '=WEEKDAY(serial_number, [return_type])' },
'WEEKNUM' : { 'Summary' : 'The Excel WEEKNUM function takes a date and returns a week number (1-54) that corresponds to the week of year. The WEEKNUM function starts counting on the week that contains January 1. By default, weeks begin on Sunday, but this can be changed.', 'Purpose' : 'Get the week number for a given date', 'Return value' : 'A number between 1 and 54.', 'Arguments' : 'serial_num - A valid Excel date in serial number format.return_type - [optional] The day the week begins. Default is 1.', 'Syntax' : '=WEEKNUM(serial_num, [return_type])' },
'WORKDAY' : { 'Summary' : 'The Excel WORKDAY function takes a date and returns the nearest working day n days in the future or past. You can use the WORKDAY function to calculate things like ship dates, delivery dates, and completion dates that need to take into account working and non-working days.', 'Purpose' : 'Get a date n working days in the future or past', 'Return value' : 'A serial number representing a particular date in Excel.', 'Arguments' : 'start_date - The date from which to start.days - The working days before or after start_date.holidays - [optional] A list dates that should be considered non-work days.', 'Syntax' : '=WORKDAY(start_date, days, [holidays])' },
'WORKDAY.INTL' : { 'Summary' : 'The Excel WORKDAY.INTL function takes a date and returns the nearest working n days in the future or past, based on an offset value you provide. Unlike the WORKDAY function, WORKDAY.INTL allows you to customize which days are considered weekends (non-working days). You can use WORKDAY.INTL function to calculate completion dates, ship dates, etc. that take into account non-working days.', 'Purpose' : 'Get date n working days in future or past', 'Return value' : 'Next or previous working date based on inputs', 'Arguments' : 'start_date - The start date.days - The end date.weekend - [optional] Setting for which days of the week should be considered weekends.holidays - [optional] A list of one or more dates that should be considered non-work days.', 'Syntax' : '=WORKDAY.INTL(start_date, days, [weekend], [holidays])' },
'YEAR' : { 'Summary' : 'The Excel YEAR function returns the year component of a date as a 4-digit number. You can use the YEAR function to extract a year number from a date into a cell or to extract and feed a year value into another formula, like the DATE function.', 'Purpose' : 'Get the year from a date', 'Return value' : 'Year as 4-digit number', 'Arguments' : 'date - A valid Excel date.', 'Syntax' : '=YEAR(date)' },
'YEARFRAC' : { 'Summary' : 'The Excel YEARFRAC function returns a decimal value that represents fractional years between two dates. You can use YEARFRAC to do things like calculate age with a birthdate.', 'Purpose' : 'Get the fraction of a year between two dates', 'Return value' : 'A decimal number', 'Arguments' : 'start_date - The start date.end_date - The end date.basis - [optional] The type of day count basis to use (see below).', 'Syntax' : '=YEARFRAC(start_date, end_date, [basis])' },
'ADDRESS' : { 'Summary' : 'The Excel ADDRESS function returns the address for a cell based on a given row and column number. For example, =ADDRESS(1,1) returns $A$1. ADDRESS can return an address in relative, mixed, or absolute format, and can be used to construct a cell reference inside a formula.', 'Purpose' : 'Create a cell address from a row and column number', 'Return value' : 'A cell address in the current or given worksheet.', 'Arguments' : 'row_num - The row number to use in the cell address.col_num - The column number to use in the cell address.abs_num - [optional] The address type (i.e. absolute, relative). Defaults to absolute.a1 - [optional] The reference style, A1 vs R1C1. Defaults to A1 style.sheet - [optional] The name of the worksheet to use. Defaults to current sheet.', 'Syntax' : '=ADDRESS(row_num, col_num, [abs_num], [a1], [sheet])' },
'AREAS' : { 'Summary' : 'The Excel AREAS function returns the number of areas in a given reference. For example, =AREAS((A1:C1,A2:C2)) returns 2. Multiple references must be enclosed in an extra set of parentheses.', 'Purpose' : 'Get the number of areas in a reference.', 'Return value' : 'A number representing number of areas.', 'Arguments' : 'reference - Reference(s) to a cell or range of cells.', 'Syntax' : '=AREAS(reference)' },
'CHOOSE' : { 'Summary' : 'The Excel CHOOSE function returns a value from a list using a given position or index. For example, =CHOOSE(2,"red","blue","green") returns "blue", since blue is the 2nd value listed after the index number. The values provided to CHOOSE can include references.', 'Purpose' : 'Get a value from a list based on position', 'Return value' : 'The value at the given position.', 'Arguments' : 'index_num - The value to choose. A number between 1 and 254.value1 - The first value from which to choose.value2 - [optional] The second value from which to choose.', 'Syntax' : '=CHOOSE(index_num, value1, [value2], ...)' },
'COLUMN' : { 'Summary' : 'The Excel COLUMN function returns the column number for a reference. For example, COLUMN(C5) returns 3, since C is the third column in the spreadsheet. When no reference is provided, COLUMN returns the column number of the cell which contains the formula.', 'Purpose' : 'Get the column number of a reference.', 'Return value' : 'A number representing the column.', 'Arguments' : 'reference - [optional] A reference to a cell or range of cells.', 'Syntax' : '=COLUMN([reference])' },
'COLUMNS' : { 'Summary' : 'The Excel COLUMNS function returns the count of columns in a given reference. For example, COLUMNS(A1:C3) returns 3, since the range A1:C3 contains 3 columns.', 'Purpose' : 'Get the number of columns in an array or reference.', 'Return value' : 'Number of columns', 'Arguments' : 'array - A reference to a range of cells.', 'Syntax' : '=COLUMNS(array)' },
'FIELDVALUE' : { 'Summary' : 'The Excel FIELDVALUE function extracts a given field value from a data type. The field is specified by name and provided as a text value.', 'Purpose' : 'Extract field value from a data type', 'Return value' : 'Field value for given data type', 'Arguments' : 'value - The data type with field values.field_name - The field name provided as a text value.', 'Syntax' : '=FIELDVALUE(value, field_name)' },
'FORMULATEXT' : { 'Summary' : 'The Excel FORMULATEXT function returns a formula as a text string from a given reference. You can use FORMULATEXT to extract the formula as text from a cell. If you use FORMULATEXT on a cell that doesn\'t contain a formula, it returns #N/A.', 'Purpose' : 'Get the formula in a cell', 'Return value' : 'The formula as text', 'Arguments' : 'reference - Reference to cell or cell range.', 'Syntax' : '=FORMULATEXT(reference)' },
'GETPIVOTDATA' : { 'Summary' : 'The Excel GETPIVOTDATA function can retrieve specific data from a pivot table by name based on the structure, instead of cell references.', 'Purpose' : 'Retrieve data from a pivot table in a formula', 'Return value' : 'The data requested', 'Arguments' : 'data_field - The name of the value field to query.pivot_table - A reference to any cell in the pivot table to query.field1, item1 - [optional] A field/item pair.', 'Syntax' : '=GETPIVOTDATA(data_field, pivot_table, [field1, item1], ...)' },
'HLOOKUP' : { 'Summary' : 'The Excel HLOOKUP function finds and retrieve a value from data in a horizontal table. The "H" in HLOOKUP stands for "horizontal", and lookup values must appear in the first row of the table, moving horizontally to the right. HLOOKUP supports approximate and exact matching, and wildcards (* ?) for finding partial matches.', 'Purpose' : ' Look up a value in a table arranged horizontally', 'Return value' : 'The matched value from a table.', 'Arguments' : 'lookup_value - The value to look up.table_array - The table from which to retrieve data.row_index - The row number from which to retrieve data.range_lookup - [optional] A Boolean to indicate exact match or approximate match. Default = TRUE = approximate match.', 'Syntax' : '=HLOOKUP(lookup_value, table_array, row_index, [range_lookup])' },
'HYPERLINK' : { 'Summary' : 'The Excel HYPERLINK function returns a hyperlink from a given destination and link text. You can use HYPERLINK to create a clickable hyperlink with a formula. The HYPERLINK function can build links to workbook locations, pages on the internet, or to files on network servers.', 'Purpose' : 'Create a clickable link.', 'Return value' : 'A clickable hyperlink', 'Arguments' : 'link_location - The path to the file or page to be opened.friendly_name - [optional] The link text to display in a cell.', 'Syntax' : '=HYPERLINK(link_location, [friendly_name])' },
'INDEX' : { 'Summary' : 'The Excel INDEX function returns the value at a given location in a range or array. You can use INDEX to retrieve individual values, or entire rows and columns. The MATCH function is often used together with INDEX to provide row and column numbers.', 'Purpose' : 'Get a value in a list or table based on location', 'Return value' : 'The value at a given location.', 'Arguments' : 'array - A range of cells, or an array constant.row_num - The row position in the reference or array.col_num - [optional] The column position in the reference or array.area_num - [optional] The range in reference that should be used.', 'Syntax' : '=INDEX(array, row_num, [col_num], [area_num])' },
'INDIRECT' : { 'Summary' : 'The Excel INDIRECT function returns a valid cell reference from a given text string. INDIRECT is useful when you want to assemble a text value that can be used as a valid reference.', 'Purpose' : 'Create a reference from text', 'Return value' : 'A valid worksheet reference.', 'Arguments' : 'ref_text - A reference supplied as text.a1 - [optional] A boolean to indicate A1 or R1C1-style reference. Default is TRUE = A1 style.', 'Syntax' : '=INDIRECT(ref_text, [a1])' },
'LOOKUP' : { 'Summary' : 'The Excel LOOKUP function performs an approximate match lookup in a one-column or one-row range, and returns the corresponding value from another one-column or one-row range. LOOKUP\'s default behavior makes it useful for solving certain problems in Excel.', 'Purpose' : 'Look up a value in a one-column range', 'Return value' : 'A value in the result vector.', 'Arguments' : 'lookup_value - The value to search for.lookup_vector - The one-row, or one-column range to search.result_vector - [optional] The one-row, or one-column range of results.', 'Syntax' : '=LOOKUP(lookup_value, lookup_vector, [result_vector])' },
'MATCH' : { 'Summary' : 'MATCH is an Excel function used to locate the position of a lookup value in a row, column, or table. MATCH supports approximate and exact matching, and wildcards (* ?) for partial matches. Often, MATCH is combined with the INDEX function to retrieve a value at a matched position.', 'Purpose' : 'Get the position of an item in an array', 'Return value' : 'A number representing a position in lookup_array.', 'Arguments' : 'lookup_value - The value to match in lookup_array.lookup_array - A range of cells or an array reference.match_type - [optional] 1 = exact or next smallest (default), 0 = exact match, -1 = exact or next largest.', 'Syntax' : '=MATCH(lookup_value, lookup_array, [match_type])' },
'OFFSET' : { 'Summary' : 'The Excel OFFSET function returns a reference to a range constructed with five inputs: (1) a starting point, (2) a row offset, (3) a column offset, (4) a height in rows, (5) a width in columns. OFFSET is handy in formulas that require a dynamic range.', 'Purpose' : 'Create a reference offset from given starting point', 'Return value' : 'A cell reference.', 'Arguments' : 'reference - The starting point, supplied as a cell reference or range.rows - The number of rows to offset below the starting reference.cols - The number of columns to offset to the right of the starting reference.height - [optional] The height in rows of the returned reference.width - [optional] The width in columns of the returned reference.', 'Syntax' : '=OFFSET(reference, rows, cols, [height], [width])' },
'ROW' : { 'Summary' : 'The Excel ROW function returns the row number for a reference. For example, ROW(C5) returns 5, since C5 is the fifth row in the spreadsheet. When no reference is provided, ROW returns the row number of the cell which contains the formula.', 'Purpose' : 'Get the row number of a reference', 'Return value' : 'A number representing the row.', 'Arguments' : 'reference - [optional] A reference to a cell or range of cells.', 'Syntax' : '=ROW([reference])' },
'ROWS' : { 'Summary' : 'The Excel ROWS function returns the count of rows in a given reference. For example, ROWS(A1:A3) returns 3, since the range A1:A3 contains 3 rows.', 'Purpose' : 'Get the number of rows in an array or reference.', 'Return value' : 'Number of rows', 'Arguments' : 'array - A reference to a cell or range of cells.', 'Syntax' : '=ROWS(array)' },
'TRANSPOSE' : { 'Summary' : 'The Excel TRANSPOSE function "flips" the orientation of a given range or array: TRANSPOSE flips a vertical range to a horizontal range, and flips a horizontal range to a vertical range.', 'Purpose' : 'Flip the orientation of a range of cells', 'Return value' : 'An array in a new orientation.', 'Arguments' : 'array - The array or range of cells to transpose.', 'Syntax' : '=TRANSPOSE(array)' },
'VLOOKUP' : { 'Summary' : 'VLOOKUP is an Excel function to look up data in a table organized vertically. VLOOKUP supports approximate and exact matching, and wildcards (* ?) for partial matches. Lookup values must appear in the first column of the table passed into VLOOKUP.', 'Purpose' : 'Lookup a value in a table by matching on the first column', 'Return value' : 'The matched value from a table.', 'Arguments' : 'lookup_value - The value to look for in the first column of a table.table_array - The table from which to retrieve a value.column_index_num - The column in the table from which to retrieve a value.range_lookup - [optional] TRUE = approximate match (default). FALSE = exact match.', 'Syntax' : '=VLOOKUP(lookup_value, table_array, column_index_num, [range_lookup])' },
'CHAR' : { 'Summary' : 'The Excel CHAR function returns a character when given a valid character code. CHAR can be used to specify characters that are hard to enter in a formula. For example, CHAR(10) returns a line break, and can be used to add a line break to text in a formula.', 'Purpose' : 'Get a character from a number', 'Return value' : 'A single character specified by a number.', 'Arguments' : 'number - A number between 1 and 255.', 'Syntax' : '=CHAR(number)' },
'CLEAN' : { 'Summary' : 'The Excel CLEAN function takes a text string and returns text that has been "cleaned" of line breaks and other non-printable characters.', 'Purpose' : 'Strip non-printable characters from text', 'Return value' : 'Text with non-printable characters removed.', 'Arguments' : 'text - The text to clean.', 'Syntax' : '=CLEAN(text)' },
'CODE' : { 'Summary' : 'The Excel CODE function returns a numeric code for a given character. For example, CODE("a") returns the code 97.', 'Purpose' : 'Get the code for a character', 'Return value' : 'A numeric code representing a character.', 'Arguments' : 'text - The text for which you want a numeric code.', 'Syntax' : '=CODE(text)' },
'CONCAT' : { 'Summary' : 'The Excel CONCAT function concatenates (joins) values supplied as references or constants. Unlike the CONCATENATE function (which CONCAT replaces), CONCAT will accept a range of cells to join, in addition to individual cell references.', 'Purpose' : 'Join text values without delimiter', 'Return value' : 'Result of concatenated text', 'Arguments' : 'text1 - First text value, cell reference, or range.text2 - [optional] Second text value, cell reference, or range.', 'Syntax' : '=CONCAT(text1, [text2], ...)' },
'CONCATENATE' : { 'Summary' : 'The Excel CONCATENATE function concatenates (joins) join up to 30 values together and returns the result as text. In Excel 2019 and later, the CONCAT and TEXTJOIN functions are better, more flexible alternatives.', 'Purpose' : 'Join text together', 'Return value' : 'Text joined together.', 'Arguments' : 'text1 - The first text value to join together.text2 - The second text value to join together.text3 - [optional] The third text value to join together.', 'Syntax' : '=CONCATENATE(text1, text2, [text3], ...)' },
'DOLLAR' : { 'Summary' : 'The Excel DOLLAR function converts a number to text using the Currency number format. The TEXT function can do the same thing, and is much more versatile.', 'Purpose' : 'Convert a number to text in currency format', 'Return value' : 'A number as text in currency format.', 'Arguments' : 'number - The number to convert.decimals - The number of digits to the right of the decimal point. Default is 2.', 'Syntax' : '=DOLLAR(number, decimals)' },
'EXACT' : { 'Summary' : 'The Excel EXACT function compares two text strings, taking into account upper and lower case characters, and returns TRUE if they are the same, and FALSE if not. EXACT is case-sensitive.', 'Purpose' : 'Compare two text strings', 'Return value' : 'A boolean value (TRUE or FALSE)', 'Arguments' : 'text1 - The first text string to compare.text2 - The second text string to compare.', 'Syntax' : '=EXACT(text1, text2)' },
'FIND' : { 'Summary' : 'The Excel FIND function returns the position (as a number) of one text string inside another. When the text is not found, FIND returns a #VALUE error.', 'Purpose' : 'Get location substring in a string', 'Return value' : 'A number representing the location of substring', 'Arguments' : 'find_text - The substring to find.within_text - The text to search within.start_num - [optional] The starting position in the text to search. Optional, defaults to 1.', 'Syntax' : '=FIND(find_text, within_text, [start_num])' },
'FIXED' : { 'Summary' : 'The Excel FIXED function converts a number to text with fixed number of decimals, rounding as needed with the given number of decimals. The FIXED function can be useful when concatenating a formatted number text.', 'Purpose' : 'Format number as text with fixed decimals', 'Return value' : 'Number formatted as text', 'Arguments' : 'number - The number to round and format.decimals - [optional] Number of decimals to use. Default is 2.no_commas - [optional] Suppress commas. TRUE = no commas, FALSE = commas. Default is FALSE.', 'Syntax' : '=FIXED(number, [decimals], [no_commas])' },
'LEFT' : { 'Summary' : 'The Excel LEFT function extracts a given number of characters from the left side of a supplied text string. For example, LEFT("apple",3) returns "app".', 'Purpose' : 'Extract text from the left of a string', 'Return value' : 'One or more characters.', 'Arguments' : 'text - The text from which to extract characters.num_chars - [optional] The number of characters to extract, starting on the left side of text. Default = 1.', 'Syntax' : '=LEFT(text, [num_chars])' },
'LEN' : { 'Summary' : 'The Excel LEN function returns the length of a given text string as the number of characters. LEN will also count characters in numbers, but number formatting is not included.', 'Purpose' : 'Get the length of text.', 'Return value' : 'Number of characters', 'Arguments' : 'text - The text for which to calculate length.', 'Syntax' : '=LEN(text)' },
'LOWER' : { 'Summary' : 'The Excel LOWER function converts a text string to all lowercase letters. Numbers, punctuation, and spaces are not affected.', 'Purpose' : 'Convert text to lower case', 'Return value' : 'Text in lower case.', 'Arguments' : 'text - The text that should be converted to lower case.', 'Syntax' : '=LOWER(text)' },
'MID' : { 'Summary' : 'The Excel MID function extracts a given number of characters from the middle of a supplied text string. For example, =MID("apple",2,3) returns "ppl".', 'Purpose' : 'Extract text from inside a string', 'Return value' : 'The characters extracted.', 'Arguments' : 'text - The text to extract from.start_num - The location of the first character to extract.num_chars - The number of characters to extract.', 'Syntax' : '=MID(text, start_num, num_chars)' },
'NUMBERVALUE' : { 'Summary' : 'The Excel NUMBERVALUE function converts a number in text format to numeric value, using specified decimal and group separators. This function can be used to convert locale-specific values into locale-independent values.', 'Purpose' : 'Convert text to number with custom separators', 'Return value' : 'Numeric value', 'Arguments' : 'text - The text to convert to a number.decimal_separator - [optional] The character for decimal values.group_separator - [optional] The character for grouping by thousands.', 'Syntax' : '=NUMBERVALUE(text, [decimal_separator], [group_separator])' },
'PROPER' : { 'Summary' : 'The Excel PROPER function capitalizes each word in a given text string. Numbers, punctuation, and spaces are not affected.', 'Purpose' : 'Capitalize the first letter in each word', 'Return value' : 'Text in proper case.', 'Arguments' : 'text - The text that should be converted to proper case.', 'Syntax' : '=PROPER(text)' },
'REPLACE' : { 'Summary' : 'The Excel REPLACE function replaces characters specified by location in a given text string with another text string. For example =REPLACE("XYZ123",4,3,"456") returns "XYZ456".', 'Purpose' : 'Replace text based on location', 'Return value' : 'The altered text.', 'Arguments' : 'old_text - The text to replace.start_num - The starting location in the text to search.num_chars - The number of characters to replace.new_text - The text to replace old_text with.', 'Syntax' : '=REPLACE(old_text, start_num, num_chars, new_text)' },
'REPT' : { 'Summary' : 'The Excel REPT function repeats characters a given number of times. For example, =REPT("x",5) returns "xxxxx".', 'Purpose' : 'Repeat text as specified', 'Return value' : 'The repeated text.', 'Arguments' : 'text - The text to repeat.number_times - The number of times to repeat text.', 'Syntax' : '=REPT(text, number_times)' },
'RIGHT' : { 'Summary' : 'The Excel RIGHT function extracts a given number of characters from the right side of a supplied text string. For example, RIGHT("apple",3) returns "ple".', 'Purpose' : 'Extract text from the right of a string', 'Return value' : 'One or more characters.', 'Arguments' : 'text - The text from which to extract characters on the right.num_chars - [optional] The number of characters to extract, starting on the right. Optional, default = 1.', 'Syntax' : '=RIGHT(text, [num_chars])' },
'SEARCH' : { 'Summary' : 'The Excel SEARCH function returns the location of one text string inside another. SEARCH returns the position of find_text inside within_text as a number. SEARCH supports wildcards, and is not case-sensitive.', 'Purpose' : 'Get the location of substring in a string', 'Return value' : 'A number representing the location of substring', 'Arguments' : 'find_text - The substring to find.within_text - The text to search within.start_num - [optional] Starting position. Optional, defaults to 1.', 'Syntax' : '=SEARCH(find_text, within_text, [start_num])' },
'SUBSTITUTE' : { 'Summary' : 'The Excel SUBSTITUTE function replaces text in a given string by matching. For example =SUBSTITUTE("952-455-7865","-","") returns "9524557865"; the dash is stripped. SUBSTITUTE is case-sensitive and does not support wildcards.', 'Purpose' : 'Replace text based on content', 'Return value' : 'The processed text', 'Arguments' : 'text - The text to change.old_text - The text to replace.new_text - The text to replace with.instance - [optional] The instance to replace. If not supplied, all instances are replaced.', 'Syntax' : '=SUBSTITUTE(text, old_text, new_text, [instance])' },
'TEXT' : { 'Summary' : 'The Excel TEXT function returns a number in a given number format, as text. You can use the TEXT function to embed formatted numbers inside text.', 'Purpose' : 'Convert a number to text in a number format', 'Return value' : 'A number as text in the given format.', 'Arguments' : 'value - The number to convert.format_text - The number format to use.', 'Syntax' : '=TEXT(value, format_text)' },
'TEXTJOIN' : { 'Summary' : 'The Excel TEXTJOIN function concatenates multiple values together with or without a delimiter. TEXTJOIN can concatenate values provided as cell references, ranges, or constants, and can optionally ignore empty cells', 'Purpose' : 'Join text values with a delimiter', 'Return value' : 'Concatenated text', 'Arguments' : 'delimiter - Separator between each text.ignore_empty - Whether to ignore empty cells or not.text1 - First text value or range.text2 - [optional] Second text value or range.', 'Syntax' : '=TEXTJOIN(delimiter, ignore_empty, text1, [text2], ...)' },
'TRIM' : { 'Summary' : 'The Excel TRIM function strips extra spaces from text, leaving only a single space between words and no space characters at the start or end of the text.', 'Purpose' : 'Remove extra spaces from text', 'Return value' : 'Text with extra spaces removed.', 'Arguments' : 'text - The text from which to remove extra space.', 'Syntax' : '=TRIM(text)' },
'UNICHAR' : { 'Summary' : 'The Excel UNICHAR function returns a Unicode character based on a given number.', 'Purpose' : 'Get Unicode character by number', 'Return value' : 'Unicode character', 'Arguments' : 'number - Code point for a Unicode character in decimal.', 'Syntax' : '=UNICHAR(number)' },
'UNICODE' : { 'Summary' : 'The Excel UNICODE function returns a number (code point) corresponding to a Unicode character. Unicode is computing standard for the unified encoding, representation, and handling of text in most of the world\'s writing systems. ', 'Purpose' : 'Get number from Unicode character', 'Return value' : 'Unicode code point in decimal notation', 'Arguments' : 'text - Unicode character to convert to number.', 'Syntax' : '=UNICODE(text)' },
'UPPER' : { 'Summary' : 'The Excel UPPER function converts a text string to all uppercase letters. Numbers, punctuation, and spaces are not affected.', 'Purpose' : 'Convert text to upper case', 'Return value' : 'Uppercase text.', 'Arguments' : 'text - The text thatto convert to upper case.', 'Syntax' : '=UPPER(text)' },
'VALUE' : { 'Summary' : 'The Excel VALUE function converts text that appears in a recognized format (i.e. a number, date, or time format) into a numeric value. Normally, the VALUE function is not needed in Excel, because Excel automatically converts text to numeric values.', 'Purpose' : 'Convert text to a number', 'Return value' : 'A numeric value.', 'Arguments' : 'text - The text value to convert to a number.', 'Syntax' : '=VALUE(text)' },
'ARRAYTOTEXT' : { 'Summary' : 'The Excel ARRAYTOTEXT function converts an array or range to a text string. The result can optionally include or omit curly braces.', 'Purpose' : 'Converts array or range to a text string', 'Return value' : 'A text string showing values', 'Arguments' : 'array - The array or range to convert to text.format - [optional] Output format. 0 = concise (default), and 1 = strict.', 'Syntax' : '=ARRAYTOTEXT(array, [format])' },
'BYCOL' : { 'Summary' : 'The Excel BYCOL function applies a LAMBDA function to each column in a given array and returns one result per column as a single array. In the example shown, data is the named range C5:H9.', 'Purpose' : 'Apply function to column', 'Return value' : 'One result per column', 'Arguments' : 'array - The array or array to process.lambda - The lambda function to apply to each column.', 'Syntax' : '=BYCOL(array, lambda)' },
'BYROW' : { 'Summary' : 'The Excel BYROW function applies a LAMBDA function to each row of a given array and returns one result per row in a single array. In the example shown, data is the named range C5:H9. ', 'Purpose' : 'Apply function to row', 'Return value' : 'One result per row', 'Arguments' : 'array - The array or array to process.lambda - The lambda function to apply to each row.', 'Syntax' : '=BYROW(array, lambda)' },
'CHOOSECOLS' : { 'Summary' : 'The Excel CHOOSECOLS function returns specific columns from an array or range. The columns to return are provided as numbers in separate arguments. Each number corresponds to the numeric index of a column in the given array.', 'Purpose' : 'Return specific columns from an array', 'Return value' : 'Extracted columns in a single array', 'Arguments' : 'array - The array to extract columns from.col_num1 - The numeric index of the first column to return.col_num2 - [optional] The numeric index of the second column to return.', 'Syntax' : '=CHOOSECOLS(array, col_num1, [col_num2], ...)' },
'CHOOSEROWS' : { 'Summary' : 'The Excel CHOOSEROWS function returns specific rows from an array or range. The rows to return are provided as numbers in separate arguments. Each number corresponds to the numeric index of a row in the given array.', 'Purpose' : 'Return specific rows from an array', 'Return value' : 'Extracted rows in a single array', 'Arguments' : 'array - The array to extract rows from.row_num1 - The numeric index of the first row to return.row_num2 - [optional] The numeric index of the second row to return.', 'Syntax' : '=CHOOSEROWS(array, row_num1, [row_num2], ...)' },
'DROP' : { 'Summary' : 'The Excel DROP function returns a subset of a given array by "dropping" rows and columns. The number of rows and columns to remove is provided by separate rows and columns arguments. Rows and columns can be dropped from the start or end of the given array.', 'Purpose' : 'Remove portion of an array', 'Return value' : 'The remaining array', 'Arguments' : 'array - The source array or range.rows - [optional] Number of rows to drop.col - [optional] Number of columns to drop.', 'Syntax' : '=DROP(array, [rows], [col])' },
'EXPAND' : { 'Summary' : 'The EXPAND function expands an array by adding rows and columns, which are supplied as separate arguments. The numbers given for rows and columns represent the dimensions of the final array.', 'Purpose' : 'Expand array by adding rows or columns', 'Return value' : 'Expanded array', 'Arguments' : 'array - The array to expand.rows - [optional] The final number of rows. Default is total rows.columns - [optional] The final number of columns. Default is total columns.pad_with - [optional] Value to use for new cells. Default is #N/A.', 'Syntax' : '=EXPAND(array, [rows], [columns], [pad_with])' },
'FILTER' : { 'Summary' : 'The Excel FILTER function filters a range of data based on supplied criteria, and extracts matching records.', 'Purpose' : 'Filters range with given criteria', 'Return value' : 'Array of filtered values', 'Arguments' : 'array - Range or array to filter.include - Boolean array, supplied as criteria.if_empty - [optional] Value to return when no results are returned.', 'Syntax' : '=FILTER(array, include, [if_empty])' },
'HSTACK' : { 'Summary' : 'The Excel HSTACK function combines arrays horizontally into a single array. Each subsequent array is appended to the right of of the previous array.', 'Purpose' : 'Combine ranges or arrays horizontally', 'Return value' : 'A single combined range or array', 'Arguments' : 'array1 - The first array or range to combine.array2 - [optional] The second array or range to combine.', 'Syntax' : '=HSTACK(array1, [array2], ...)' },
'ISOMITTED' : { 'Summary' : 'The Excel ISOMITTED function is a helper function for LAMBDA functions to allow optional arguments. Inside a LAMBDA function, ISOMITTED will return TRUE when an argument has not been provided.', 'Purpose' : 'Check for optional arguments in LAMBDAs', 'Return value' : 'TRUE or FALSE', 'Arguments' : 'argument - The argument to test for.', 'Syntax' : '=ISOMITTED(argument)' },
'LAMBDA' : { 'Summary' : 'The Excel LAMBDA function provides a way create custom functions that can be reused throughout a workbook, without VBA or macros.', 'Purpose' : 'Create custom function', 'Return value' : 'As defined by formula', 'Arguments' : 'parameter - An input value for the function.calculation - The calculation to perform as the result of the function. Must be last argument.', 'Syntax' : '=LAMBDA(parameter, ..., calculation)' },
'LET' : { 'Summary' : 'The Excel LET function lets you define named variables in a formula. There are two primary reasons you might want to do this: (1) to improve performance by eliminating redundant calculations and (2) to make more complex formulas easier to read and write.', 'Purpose' : 'Assign variables inside formula', 'Return value' : 'Normal formula result', 'Arguments' : 'name1 - First name to assign. Must begin with a letter.value1 - The value or calculation to assign to name 1.name2/value2 - [optional] Second name and value. Entered as a pair of arguments.result - A calculation or a variable previously calculated.', 'Syntax' : '=LET(name1, value1, [name2/value2], ..., result)' },
'MAKEARRAY' : { 'Summary' : 'The Excel MAKEARRAY function returns a array with specified rows and columns, based on a custom LAMBDA calculation. MAKEARRAY can be used to create arrays with variable dimensions where values are the result of a calculation.', 'Purpose' : 'Create array with calculated values', 'Return value' : 'An array of calculated values', 'Arguments' : 'rows - The number of rows to create.columns - The number of columns to create.lambda - The custom LAMBDA calculation to apply.', 'Syntax' : '=MAKEARRAY(rows, columns, lambda)' },
'MAP' : { 'Summary' : 'The Excel MAP function "maps" a custom LAMBDA function to each value in a supplied array. The LAMBDA is applied to each value, and the result from MAP is an array of results with the same dimensions as the original array.', 'Purpose' : 'Map array to custom function', 'Return value' : 'Array of results', 'Arguments' : 'array1 - The array to be mapped.array2 - [optional] Additional arrays required by the LAMBDA.lambda - The custom LAMBDA function to apply.', 'Syntax' : '=MAP(array1, [array2], ..., lambda)' },
'RANDARRAY' : { 'Summary' : 'The Excel RANDARRAY function generates an array of random numbers between two values. The size or the array is is specified by rows and columns arguments. The generated values can be either decimals or whole numbers.', 'Purpose' : 'Get array of random numbers', 'Return value' : 'Array of random values', 'Arguments' : 'rows - [optional] Row count. Default = 1.columns - [optional] Column count. Default = 1.min - [optional] Minimum value. Default = 0.max - [optional] Maximum value. Default = 1.integer - [optional] Whole numbers. Boolean, TRUE or FALSE. Default = FALSE.', 'Syntax' : '=RANDARRAY([rows], [columns], [min], [max], [integer])' },
'REDUCE' : { 'Summary' : 'The Excel REDUCE function applies a custom LAMBDA function to each element in a given array and accumulates results to a single value.', 'Purpose' : 'Reduce an array', 'Return value' : 'A single value', 'Arguments' : 'initial_value - [optional] The initial value of the accumulator.array - The array to be reduced.lambda - The custom LAMBDA function to apply.', 'Syntax' : '=REDUCE([initial_value], array, lambda)' },
'SCAN' : { 'Summary' : 'The SCAN function applies a custom LAMBDA function to each element in a given array and returns an array that contains the intermediate values created during the scan. SCAN can be used to generate running totals and other calculations that show intermediate results. ', 'Purpose' : 'Scan array and return intermediate results', 'Return value' : 'An array of results', 'Arguments' : 'initial_value - [optional] The initial value of the accumulator.array - The array to be scanned.lambda - The custom LAMBDA function to apply.', 'Syntax' : '=SCAN([initial_value], array, lambda)' },
'SEQUENCE' : { 'Summary' : 'The Excel SEQUENCE function generates a list of sequential numbers in an array. The array can be one dimensional, or two-dimensional, determined by rows and columns arguments. ', 'Purpose' : 'Get array of list of sequential numbers', 'Return value' : 'Array of sequential values', 'Arguments' : 'rows - Number of rows to return.columns - [optional] Number of columns to return.start - [optional] Starting value (defaults to 1).step - [optional] Increment between each value (defaults to 1).', 'Syntax' : '=SEQUENCE(rows, [columns], [start], [step])' },
'SORT' : { 'Summary' : 'The Excel SORT function sorts the contents of a range or array in ascending or descending order. Values can be sorted by one or more columns. SORT returns a dynamic array of results.', 'Purpose' : 'Sorts range or array', 'Return value' : 'Sorted array', 'Arguments' : 'array - Range or array to sort.sort_index - [optional] Column index to use for sorting. Default is 1.sort_order - [optional] 1 = Ascending, -1 = Descending. Default is ascending order.by_col - [optional] TRUE = sort by column. FALSE = sort by row. Default is FALSE.', 'Syntax' : '=SORT(array, [sort_index], [sort_order], [by_col])' },
'SORTBY' : { 'Summary' : 'The Excel SORTBY function sorts the contents of a range or array based on the values from another range or array. The range or array used to sort does not need to appear in results.', 'Purpose' : 'Sorts range or array by column', 'Return value' : 'Sorted array', 'Arguments' : 'array - Range or array to sort.by_array - Range or array to sort by.sort_order - [optional] Sort order. 1 = ascending (default), -1 = descending.array/order - [optional] Additional array and sort order pairs.', 'Syntax' : '=SORTBY(array, by_array, [sort_order], [array/order], ...)' },
'STOCKHISTORY' : { 'Summary' : 'The Excel STOCKHISTORY function retrieves historical stock price information based on a given symbol and date range. The primary purpose of STOCKHISTORY is to get the history of a financial instrument over time. The result is an array of values that spill onto the worksheet into multiple cells.', 'Purpose' : 'Retrieve stock price information', 'Return value' : 'Array of stock price information', 'Arguments' : 'stock - A ticker symbol in double quotes ("MSFT", "AAPL", "GOOG", etc.).start_date - The start date for data to be retrieved.end_date - [optional] The end date for data to be retrieved. Default is start_date.interval - [optional] Time interval. Daily = 0, weekly = 1, monthly = 2. Default is 0.headers - [optional] No header = 0, basic header = 1, instrument + header = 2. Default is 1.properties - [optional] Additional data to retrieve. Default is Date and Close. See below.', 'Syntax' : '=STOCKHISTORY(stock, start_date, [end_date], [interval], [headers], [properties], ...)' },
'TAKE' : { 'Summary' : 'The Excel TAKE function returns a subset of a given array. The number of rows and columns to return is provided by separate rows and columns arguments. Rows and columns can be extracted from the start or end of the given array.', 'Purpose' : 'Get a subset of an array', 'Return value' : 'A subset of a given array', 'Arguments' : 'array - The source array or range.rows - [optional] Number of rows to return as an integer.col - [optional] Number of columns to return as an integer.', 'Syntax' : '=TAKE(array, [rows], [col])' },
'TEXTAFTER' : { 'Summary' : 'The Excel TEXTAFTER function returns the text that occurs after a given substring or delimiter. In cases where multiple delimiters appear in the text, TEXTAFTER can return text after the nth occurrence of a delimiter.', 'Purpose' : 'Extract text after delimiter', 'Return value' : 'Extracted text', 'Arguments' : 'text - The text string to extract from.delimiter - The character(s) that delimit the text.instance_num - [optional] The instance of the delimiter in text. Default is 1.match_mode - [optional] Case-sensitivity. 0 = enabled, 1 = disabled. Default is 0.match_end - [optional] Treat end of text as delimiter. 0 = disabled, 1 = enabled. Default is 0.if_not_found - [optional] Value to return when no match is found. #N/A is default.', 'Syntax' : '=TEXTAFTER(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])' },
'TEXTBEFORE' : { 'Summary' : 'The Excel TEXTBEFORE function returns the text that occurs before a given substring or delimiter. In cases where multiple delimiters appear in the text, TEXTBEFORE can return text before the nth occurrence of the delimiter.', 'Purpose' : 'Extract text before delimiter', 'Return value' : 'Extracted text', 'Arguments' : 'text - The text string to extract from.delimiter - The character(s) that delimit the text.instance_num - [optional] The instance of the delimiter in text. Default is 1.match_mode - [optional] Case-sensitivity. 0 = enabled, 1 = disabled. Default is 0.match_end - [optional] Treat end of text as delimiter. 0 = disabled, 1 = enabled. Default is 0.if_not_found - [optional] Value to return when no match is found. #N/A is default.', 'Syntax' : '=TEXTBEFORE(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])' },
'TEXTSPLIT' : { 'Summary' : 'The Excel TEXTSPLIT function splits text by a given delimiter to an array that spills into multiple cells. TEXTSPLIT can split text into rows or columns.', 'Purpose' : 'Split a text string with a delimiter', 'Return value' : 'Text in multiple cells ', 'Arguments' : 'text - The text string to split.col_delimiter - The character(s) to delimit columns.row_delimiter - [optional] The character(s) to delimit rows.ignore_empty - [optional] Ignore empty values. TRUE = ignore, FALSE = preserve. Default is FALSE.match_mode - [optional] Case-sensitivity. 0 = enabled, 1 = disabled. Default is 0.pad_with - [optional] Value to pad missing values in 2d arrays.', 'Syntax' : '=TEXTSPLIT(text, col_delimiter, [row_delimiter], [ignore_empty], [match_mode], [pad_with])' },
'TOCOL' : { 'Summary' : 'The Excel TOCOL function transforms an array into a single column. By default, TOCOL will scan values by row, but TOCOL can also scan values by column.', 'Purpose' : 'Transform array to single column', 'Return value' : 'A single column of values', 'Arguments' : 'array - The array to transform.ignore - Setting to ignore blanks and errors.scan_by_column - Scan array by column. TRUE=column, FALSE=row (default=TRUE).', 'Syntax' : '=TOCOL(array, ignore, scan_by_column)' },
'TOROW' : { 'Summary' : 'The Excel TOROW function transforms an array into a single row. By default, TOROW will scan values by row, but TOROW can also scan values by column.', 'Purpose' : 'Transform array to single row', 'Return value' : 'A single row of values', 'Arguments' : 'array - The array to transform.ignore - Control to ignore blanks and errors.scan_by_column - Scan array by column. TRUE = column, FALSE = row (default = TRUE).', 'Syntax' : '=TOROW(array, ignore, scan_by_column)' },
'UNIQUE' : { 'Summary' : 'The Excel UNIQUE function returns a list of unique values in a list or range. Values can be text, numbers, dates, times, etc.', 'Purpose' : 'Extract unique values from range', 'Return value' : 'Array of unique values', 'Arguments' : 'array - Range or array from which to extract unique values.by_col - [optional] How to compare and extract. By row = FALSE (default); by column = TRUE.exactly_once - [optional] TRUE = values that occur once, FALSE= all unique values (default).', 'Syntax' : '=UNIQUE(array, [by_col], [exactly_once])' },
'VALUETOTEXT' : { 'Summary' : 'The Excel VALUETOTEXT function converts a value to text. By default, text values pass though unaffected. However, in strict mode, text values are enclosed in double quotes (""). Numeric values are converted to text in all cases and number formatting is lost.', 'Purpose' : 'Converts a value to a text string', 'Return value' : 'Value as a text string', 'Arguments' : 'value - The value to convert to text.format - [optional] Output format. 0 = concise (default), and 1 = strict.', 'Syntax' : '=VALUETOTEXT(value, [format])' },
'VSTACK' : { 'Summary' : 'The Excel VSTACK function combines arrays vertically into a single array. Each subsequent array is appended to the bottom of the previous array.', 'Purpose' : 'Combine ranges or arrays vertically', 'Return value' : 'A single combined range or array', 'Arguments' : 'array1 - The first array or range to combine.array2 - [optional] The second array or range to combine.', 'Syntax' : '=VSTACK(array1, [array2], ...)' },
'WRAPCOLS' : { 'Summary' : 'The Excel WRAPCOLS function converts a one-dimensional array into a two-dimensional array by wrapping values into separate columns. The length of each column is given as the wrap_count argument: when the count is reached, WRAPCOLS starts a new column.', 'Purpose' : 'Wrap array into columns', 'Return value' : 'Array wrapped by column', 'Arguments' : 'vector - The array or range to wrap.wrap_count - Max values in each column.pad_with - [optional] Value to use for unfilled places.', 'Syntax' : '=WRAPCOLS(vector, wrap_count, [pad_with])' },
'WRAPROWS' : { 'Summary' : 'The Excel WRAPROWS function converts a one-dimensional array into a two-dimensional array by wrapping values into separate rows. The length of each row is given as the wrap_count argument: when the count is reached, WRAPROWS starts a new row.', 'Purpose' : 'Wrap array into rows', 'Return value' : 'Array wrapped by row', 'Arguments' : 'vector - The array or range to wrap.wrap_count - Max values in each row.pad_with - [optional] Value to use for unfilled places.', 'Syntax' : '=WRAPROWS(vector, wrap_count, [pad_with])' },
'XLOOKUP' : { 'Summary' : 'The Excel XLOOKUP function is a modern and flexible replacement for older functions like VLOOKUP, HLOOKUP, and LOOKUP. XLOOKUP supports approximate and exact matching, wildcards (* ?) for partial matches, and lookups in vertical or horizontal ranges.', 'Purpose' : 'Lookup values in range or array', 'Return value' : 'Matching value(s) from return array', 'Arguments' : 'lookup - The lookup value.lookup_array - The array or range to search.return_array - The array or range to return.not_found - [optional] Value to return if no match found.match_mode - [optional] 0 = exact match (default), -1 = exact match or next smallest, 1 = exact match or next larger, 2 = wildcard match.search_mode - [optional] 1 = search from first (default), -1 = search from last, 2 = binary search ascending, -2 = binary search descending.', 'Syntax' : '=XLOOKUP(lookup, lookup_array, return_array, [not_found], [match_mode], [search_mode])' },
'XMATCH' : { 'Summary' : 'The Excel XMATCH function performs a lookup and returns a position in vertical or horizontal ranges. It is a more robust and flexible successor to the MATCH function. XMATCH supports approximate and exact matching, reverse search, and wildcards (* ?) for partial matches. ', 'Purpose' : 'Get the position of an item in a list or table', 'Return value' : 'Numeric position in lookup array', 'Arguments' : 'lookup_value - The lookup value.lookup_array - The array or range to search.match_mode - [optional] 0 = exact match (default), -1 = exact match or next smallest, 1 = exact match or next larger, 2 = wildcard match.search_mode - [optional] 1 = search from first (default), -1 = search from last, 2 = binary search ascending, -2 = binary search descending.', 'Syntax' : '=XMATCH(lookup_value, lookup_array, [match_mode], [search_mode])' },
'BIN2DEC' : { 'Summary' : 'The Excel BIN2DEC function converts a binary number to the decimal equivalent. The input number must contain only zeros and ones and be less than 10 characters long, otherwise the function returns the #NUM! error value.', 'Purpose' : 'Converts a binary number to decimal', 'Return value' : 'Decimal Number', 'Arguments' : 'number - The binary number you want to convert to decimal.', 'Syntax' : '=BIN2DEC(number)' },
'BIN2HEX' : { 'Summary' : 'The Excel BIN2HEX function converts a binary number to its hexadecimal equivalent.', 'Purpose' : 'Converts a binary number to hexadecimal', 'Return value' : 'Hexadecimal number', 'Arguments' : 'number - The binary number you want to convert to hexadecimal.places - [optional] If omitted uses the least number of characters required to represent the number, otherwise pads the result with zeros up to the specified number of places.', 'Syntax' : '=BIN2HEX(number, [places])' },
'BIN2OCT' : { 'Summary' : 'The Excel BIN2OCT function converts a binary number to its octal equivalent.', 'Purpose' : 'Converts a binary number to octal', 'Return value' : 'Octal number', 'Arguments' : 'number - The binary number you want to convert to octal.places - [optional] If omitted uses the least number of characters required to represent the number, otherwise pads the result with zeros up to the specified number of places.', 'Syntax' : '=BIN2OCT(number, [places])' },
'BITAND' : { 'Summary' : 'The Excel BITAND function returns a decimal number representing the bitwise AND of two numbers.', 'Purpose' : 'Returns a \'Bitwise And\' of two numbers', 'Return value' : 'Decimal Number', 'Arguments' : 'number1 - A positive decimal number.number2 - A positive decimal number.', 'Syntax' : '=BITAND(number1, number2)' },
'BITLSHIFT' : { 'Summary' : 'The Excel BITLSHIFT function shifts a number by the specified number of bits, effectively doubling or halving the number a specified number of times.', 'Purpose' : 'Returns a number shifted left by some number of bits', 'Return value' : 'Decimal Number', 'Arguments' : 'number - The number to be bit shifted.shift_amount - The amount of bits to shift, if negative shifts bits to the right instead.', 'Syntax' : '=BITLSHIFT(number, shift_amount)' },
'BITOR' : { 'Summary' : 'The Excel BITOR function returns a decimal number representing the bitwise OR of two numbers. For each corresponding bit in the binary representation of the numbers a logical OR operation is performed, and the resulting number returned.', 'Purpose' : 'Returns a \'Bitwise Or\' of two numbers', 'Return value' : 'Decimal Number', 'Arguments' : 'number1 - A positive decimal number.number2 - A positive decimal number.', 'Syntax' : '=BITOR(number1, number2)' },
'BITRSHIFT' : { 'Summary' : 'The Excel BITRSHIFT function shifts a number by the specified number of bits, effectively halving or doubling the number a specified number of times.', 'Purpose' : 'Returns a number shifted right by some number of bits', 'Return value' : 'Decimal Number', 'Arguments' : 'number - The number to be bit shifted.shift_amount - The amount of bits to shift to the right, if negative shifts bits to the left instead.', 'Syntax' : '=BITRSHIFT(number, shift_amount)' },
'BITXOR' : { 'Summary' : 'The Excel BITXOR function returns a decimal number representing the bitwise XOR of two numbers. For each corresponding bit in the binary representation of the numbers a logical XOR operation is performed and the resulting number returned.', 'Purpose' : 'Returns a \'Bitwise Xor\' of two numbers', 'Return value' : 'Decimal Number', 'Arguments' : 'number1 - A positive decimal number.number2 - A positive decimal number.', 'Syntax' : '=BITXOR(number1, number2)' },
'COMPLEX' : { 'Summary' : 'The Excel COMPLEX function creates a complex number with given real and imaginary coefficients. COMPLEX returns a text result in the form x + yi or x + yj.', 'Purpose' : 'Convert coefficients to complex number', 'Return value' : 'Complex number as text', 'Arguments' : 'real_num - The real number.i_num - The imaginary number.suffix - [optional] The suffix, either "i" or "j".', 'Syntax' : '=COMPLEX(real_num, i_num, [suffix])' },
'CONVERT' : { 'Summary' : 'The Excel CONVERT function converts a number in one measurement system to another. For example, you can use CONVERT to convert feet into meters, pounds into kilograms, Fahrenheit to Celsius, gallons into liters, and for many other unit conversions.', 'Purpose' : 'Convert measurement units', 'Return value' : 'A number in the new measurement system', 'Arguments' : 'number - The numeric value to convert.from_unit - The starting units for number.to_unit - The ending units for the result.', 'Syntax' : '=CONVERT(number, from_unit, to_unit)' },
'DEC2BIN' : { 'Summary' : 'The Excel DEC2BIN function converts a decimal number to its binary equivalent.', 'Purpose' : 'Converts a decimal number to binary', 'Return value' : 'Binary number', 'Arguments' : 'number - The decimal number you want to convert to binary.places - [optional] Pads the resulting binary number with zeros up to the specified number of digits. If omitted returns the least number of characters required to represent the number.', 'Syntax' : '=DEC2BIN(number, [places])' },
'DEC2HEX' : { 'Summary' : 'The Excel DEC2HEX function converts a decimal number to its hexadecimal equivalent.', 'Purpose' : 'Converts a decimal number to hexadecimal', 'Return value' : 'Hexadecimal number', 'Arguments' : 'number - The decimal number you want to convert to hexadecimal.places - [optional] Pads the resulting number with zeros up to the specified number of digits. If omitted returns the least number of characters required to represent the number.', 'Syntax' : '=DEC2HEX(number, [places])' },
'DEC2OCT' : { 'Summary' : 'The Excel DEC2OCT function converts a decimal number to its octal equivalent.', 'Purpose' : 'Converts a decimal number to octal', 'Return value' : 'Octal number', 'Arguments' : 'number - The decimal number you want to convert to octal.places - [optional] Pads the resulting octal number with zeros up to the specified number of digits. If omitted returns the least number of characters required to represent the number.', 'Syntax' : '=DEC2OCT(number, [places])' },
'DELTA' : { 'Summary' : 'The Excel DELTA function will test if two numeric values are equal. When values are equal, DELTA returns 1, otherwise, DELTA returns zero.', 'Purpose' : 'Test two values are equal', 'Return value' : 'The number one or zero', 'Arguments' : 'number1 - The first number.number2 - [optional] The second number.', 'Syntax' : '=DELTA(number1, [number2])' },
'HEX2BIN' : { 'Summary' : 'The Excel HEX2BIN function converts a hexadecimal number to its binary equivalent.', 'Purpose' : 'Converts a hexadecimal number to binary', 'Return value' : 'Binary number', 'Arguments' : 'number - The hexadecimal number you want to convert to binary.places - [optional] Pads the resulting binary number with zeros up to the specified number of digits. If omitted returns the least number of characters required to represent the number.', 'Syntax' : '=HEX2BIN(number, [places])' },
'HEX2DEC' : { 'Summary' : 'The Excel HEX2DEC function converts a hexadecimal number to its decimal equivalent.', 'Purpose' : 'Converts a hexadecimal number to decimal', 'Return value' : 'Decimal number', 'Arguments' : 'number - The hexadecimal number you want to convert to decimal.', 'Syntax' : '=HEX2DEC(number)' },
'HEX2OCT' : { 'Summary' : 'The Excel HEX2OCT function converts a hexadecimal number to its octal equivalent.', 'Purpose' : 'Converts a hexadecimal number to octal', 'Return value' : 'Octal number', 'Arguments' : 'number - The hexadecimal number you want to convert to octal.places - [optional] Pads the resulting binary number with zeros up to the specified number of digits. If omitted returns the least number of characters required to represent the number.', 'Syntax' : '=HEX2OCT(number, [places])' },
'IMABS' : { 'Summary' : 'The Excel IMABS function returns the absolute value of a complex number in the form x + yi or x + yj. Use the COMPLEX function to create a complex number from real and imaginary parts.', 'Purpose' : 'Get absolute value of complex number', 'Return value' : 'Absolute value as number', 'Arguments' : 'inumber - A complex number.', 'Syntax' : '=IMABS(inumber)' },
'IMAGINARY' : { 'Summary' : 'The Excel IMAGINARY function returns the imaginary coefficient of a complex number given in the form x + yi or x + yj.', 'Purpose' : 'Get imaginary coefficient of complex number', 'Return value' : 'Imaginary coefficient as number', 'Arguments' : 'inumber - A complex number.', 'Syntax' : '=IMAGINARY(inumber)' },
'IMPOWER' : { 'Summary' : 'The Excel IMPOWER function returns a complex number raised to a given power. The complex number must be in the form x + yi or x + yj. Use the COMPLEX function to create a complex number from real and imaginary parts.', 'Purpose' : 'Raise complex number to given power', 'Return value' : 'Complex number as text', 'Arguments' : 'inumber - A complex number.number - Power to raise number.', 'Syntax' : '=IMPOWER(inumber, number)' },
'IMPRODUCT' : { 'Summary' : 'The Excel IMPRODUCT function returns the product of one or more complex numbers. The complex number must be in the form x + yi or x + yj. Use the COMPLEX function to create a complex number from real and imaginary parts.', 'Purpose' : 'Get product of complex numbers', 'Return value' : 'Product as complex number', 'Arguments' : 'inumber1 - Complex number 1.inumber2 - [optional] Complex number 2.', 'Syntax' : '=IMPRODUCT(inumber1, [inumber2], ...)' },
'IMREAL' : { 'Summary' : 'The Excel IMREAL function returns the real coefficient of a complex number in the form x + yi or x + yj. ', 'Purpose' : 'Get real coefficient of complex number', 'Return value' : 'Real coefficient as number', 'Arguments' : 'inumber - A complex number.', 'Syntax' : '=IMREAL(inumber)' },
'IMSUB' : { 'Summary' : 'The Excel IMSUB function returns the difference between two complex numbers. Complex numbers must be in the form x + yi or x + yj. Use the COMPLEX function to create complex numbers', 'Purpose' : 'Get difference between two complex numbers', 'Return value' : 'Difference between complex numbers as text', 'Arguments' : 'inumber1 - Complex number 1.inumber2 - Complex number 2.', 'Syntax' : '=IMSUB(inumber1, inumber2)' },
'IMSUM' : { 'Summary' : 'The Excel IMSUM function returns the sum of two or more complex numbers. The complex numbers must be in the form x + yi or x + yj. Use the COMPLEX function to create a complex number from real and imaginary parts.', 'Purpose' : 'Get sum of complex numbers', 'Return value' : 'Sum of complex numbers as text', 'Arguments' : 'inumber1 - Complex number 1.inumber2 - [optional] Complex number 2.', 'Syntax' : '=IMSUM(inumber1, [inumber2], ...)' },
'ACCRINT' : { 'Summary' : 'The Excel ACCRINT function returns the accrued interest for a security that pays periodic interest', 'Purpose' : 'Get accrued interest periodic', 'Return value' : 'Accrued interest', 'Arguments' : 'id - Issue date of the security.fd - First interest date of security.sd - Settlement date of security.rate - Interest rate of security.par - Par value of security.freq - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).basis - [optional] Day count basis (see below, default =0).calc - [optional] Calculation method (see below, default = TRUE).', 'Syntax' : '=ACCRINT(id, fd, sd, rate, par, freq, [basis], [calc])' },
'ACCRINTM' : { 'Summary' : 'The Excel ACCRINTM function returns the accrued interest for a security that pays interest at maturity (i.e. pays interest one time only).', 'Purpose' : 'Get accrued interest at maturity', 'Return value' : 'Accrued interest', 'Arguments' : 'id - Issue date of the security.sd - Settlement date of the security.rate - Annual coupon rate.par - Par value of security.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=ACCRINTM(id, sd, rate, par, [basis])' },
'AMORDEGRC' : { 'Summary' : 'The Excel AMORDEGRC function returns the depreciation for a given accounting using a depreciation coefficient determined by asset life.', 'Purpose' : 'Depreciation for accounting period coefficient', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Asset cost.purchase - Asset purchase date.first - First period end date.salvage - Asset salvage value.period - Period for which to calculate depreciation.rate - Rate of depreciation.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=AMORDEGRC(cost, purchase, first, salvage, period, rate, [basis])' },
'AMORLINC' : { 'Summary' : 'The Excel AMORLINC function returns the depreciation for each accounting period', 'Purpose' : 'Depreciation for accounting period', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Asset cost.purchase - Asset purchase date.first - End date of first period.salvage - Asset salvage value.period - The period for which to calculate depreciation.rate - Rate of depreciation.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=AMORLINC(cost, purchase, first, salvage, period, rate, [basis])' },
'COUPDAYBS' : { 'Summary' : 'The Excel COUPDAYBS function returns the number of days from the beginning of the coupon period to the settlement date.', 'Purpose' : 'Get days from coupon period to settlement date', 'Return value' : 'Days as a number', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.frequency - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=COUPDAYBS(settlement, maturity, frequency, [basis])' },
'COUPDAYS' : { 'Summary' : 'The Excel COUPDAYS function returns the number of days in a coupon period that includes the settlement date.', 'Purpose' : 'Get days in coupon period incl settlement date', 'Return value' : 'Calculated days', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.frequency - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=COUPDAYS(settlement, maturity, frequency, [basis])' },
'COUPDAYSNC' : { 'Summary' : 'The Excel COUPDAYSNC function returns the number of days from the settlement date to the next coupon date.', 'Purpose' : 'Get days from settlement date to next coupon date', 'Return value' : 'Days to next coupon date', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.frequency - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=COUPDAYSNC(settlement, maturity, frequency, [basis])' },
'COUPNCD' : { 'Summary' : 'The Excel COUPNCD function returns the next coupon date after the settlement date.', 'Purpose' : 'Get next coupon date after settlement date', 'Return value' : 'Next coupon date', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.frequency - Coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=COUPNCD(settlement, maturity, frequency, [basis])' },
'COUPNUM' : { 'Summary' : 'The Excel COUPNUM function returns the number of coupons, or interest payments, payable between the settlement date and maturity date.', 'Purpose' : 'Get number of coupons payable', 'Return value' : 'Number of coupons payable', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.frequency - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=COUPNUM(settlement, maturity, frequency, [basis])' },
'COUPPCD' : { 'Summary' : 'The Excel COUPPCD function returns the previous coupon date before the settlement date for a coupon bond.', 'Purpose' : 'Get previous coupon date before settlement date', 'Return value' : 'Previous coupon date', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.frequency - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=COUPPCD(settlement, maturity, frequency, [basis])' },
'CUMIPMT' : { 'Summary' : 'The Excel CUMIPMT function is a financial function that returns the cumulative interest paid on a loan between a start period and an end period. You can use CUMIPMT to calculate and verify the total interest paid on a loan, or the interest paid between any two payment periods.', 'Purpose' : 'Get cumulative interest paid on a loan', 'Return value' : 'The interest amount', 'Arguments' : 'rate - The interest rate per period.nper - The total number of payments for the loan.pv - The present value, or total value of all payments now.start_period - First payment in calculation.end_period - Last payment in calculation.type - When payments are due. 0 = end of period. 1 = beginning of period.', 'Syntax' : '=CUMIPMT(rate, nper, pv, start_period, end_period, type)' },
'CUMPRINC' : { 'Summary' : 'The Excel CUMPRINC function is a financial function that returns the cumulative principal paid on a loan between a start period and an end period. You can use CUMPRINC to calculate and verify the total principal paid on a loan, or the principal paid between any two payment periods.', 'Purpose' : 'Get cumulative principal paid on a loan', 'Return value' : 'The principal amount', 'Arguments' : 'rate - The interest rate per period.nper - The total number of payments for the loan.pv - The present value, or total value of all payments now.start_period - First payment in calculation.end_period - Last payment in calculation.type - When payments are due. 0 = end of period. 1 = beginning of period.', 'Syntax' : '=CUMPRINC(rate, nper, pv, start_period, end_period, type)' },
'DB' : { 'Summary' : 'The Excel DB function returns the depreciation of an asset for a specified period using the fixed-declining balance method. The calculation is based on initial asset cost, salvage value, the number of periods over which the asset is depreciated and, optionally, the number of months in the first year.', 'Purpose' : 'Depreciation - fixed-declining balance', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Initial cost of asset.salvage - Asset value at the end of the depreciation.life - Periods over which asset is depreciated.period - Period to calculation depreciation for.month - [optional] Number of months in the first year. Defaults to 12.', 'Syntax' : '=DB(cost, salvage, life, period, [month])' },
'DDB' : { 'Summary' : 'The Excel DDB function returns the depreciation of an asset for a given period using the double-declining balance method or another method you specify by changing the factor argument.', 'Purpose' : 'Depreciation - double-declining', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Initial cost of asset.salvage - Asset value at the end of the depreciation.life - Periods over which asset is depreciated.period - Period to calculation depreciation for.factor - [optional] Rate at which the balance declines. If omitted, defaults to 2.', 'Syntax' : '=DDB(cost, salvage, life, period, [factor])' },
'DISC' : { 'Summary' : 'The Excel DISC function returns the discount rate for a security.', 'Purpose' : 'Get discount rate for a security', 'Return value' : 'Discount rate as percentage', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.pr - Security price per $100 face value.redemption - Security redemption value per $100 face value.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=DISC(settlement, maturity, pr, redemption, [basis])' },
'DOLLARDE' : { 'Summary' : 'The Excel DOLLARDE function converts a dollar price entered with a special notation to a dollar price displayed as a decimal number. The DOLLARFR function does the opposite conversion.', 'Purpose' : 'Convert dollar price as fraction to decimal', 'Return value' : 'Equivalent decimal number', 'Arguments' : 'fractional_dollar - Dollar component in special fractional notation.fraction - The denominator in the fractional unit. 8 = 1/8, 16 = 1/16, 32 = 1/32, etc.', 'Syntax' : '=DOLLARDE(fractional_dollar, fraction)' },
'DOLLARFR' : { 'Summary' : 'The Excel DOLLARFR function converts a dollar price in a regular decimal number format to a dollar price in a particular fractional notation used for securities where pricing is given to the nearest 1/8, 1/16, 1/32, etc. The DOLLARDE function does the opposite conversion.', 'Purpose' : 'Convert price to fractional notation', 'Return value' : 'Dollar value in fractional notation', 'Arguments' : 'decimal_dollar - Pricing as a normal decimal number.fraction - The denominator in the fractional unit. 8 = 1/8, 16 = 1/16, 32 = 1/32, etc.', 'Syntax' : '=DOLLARFR(decimal_dollar, fraction)' },
'DURATION' : { 'Summary' : 'The Excel DURATION function returns the annual duration of a security with periodic interest payments, calculated with the Macauley duration formula.', 'Purpose' : 'Get annual duration with periodic interest', 'Return value' : 'Duration in years', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.coupon - The security\'s annual coupon rate.yld - The security\'s annual yield.freq - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=DURATION(settlement, maturity, coupon, yld, freq, [basis])' },
'EFFECT' : { 'Summary' : 'The Excel EFFECT function returns the effective annual interest rate, given a nominal interest rate and the number of compounding periods per year. Effective annual interest rate is the interest rate actually earned due to compounding. ', 'Purpose' : 'Get effective annual interest rate', 'Return value' : 'Effective annual interest rate', 'Arguments' : 'nominal_rate - The nominal or stated interest rate.npery - Number of compounding periods per year.', 'Syntax' : '=EFFECT(nominal_rate, npery)' },
'FV' : { 'Summary' : 'The Excel FV function is a financial function that returns the future value of an investment. You can use the FV function to get the future value of an investment assuming periodic, constant payments with a constant interest rate.', 'Purpose' : 'Get the future value of an investment', 'Return value' : 'future value', 'Arguments' : 'rate - The interest rate per period.nper - The total number of payment periods.pmt - The payment made each period. Must be entered as a negative number.pv - [optional] The present value of future payments. If omitted, assumed to be zero. Must be entered as a negative number.type - [optional] When payments are due. 0 = end of period, 1 = beginning of period. Default is 0.', 'Syntax' : '=FV(rate, nper, pmt, [pv], [type])' },
'FVSCHEDULE' : { 'Summary' : 'The Excel FVSCHEDULE function returns the future value of a single sum based on a schedule of given interest rates. FVSCHEDULE can be used to find the future value of an investment with a variable or adjustable rate.', 'Purpose' : 'Get future value of principal compound interest', 'Return value' : 'Future value', 'Arguments' : 'principal - The initial investment sum.schedule - Schedule of interest rates, provided as range or array.', 'Syntax' : '=FVSCHEDULE(principal, schedule)' },
'INTRATE' : { 'Summary' : 'The Excel INTRATE function returns the interest rate for a fully invested security.', 'Purpose' : 'Get interest rate for fully invested security', 'Return value' : 'Interest rate as percentage', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.investment - The amount originally invested.redemption - The amount received at maturity.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=INTRATE(settlement, maturity, investment, redemption, [basis])' },
'IPMT' : { 'Summary' : 'The Excel IPMT function can be used to calculate the interest portion of a given loan payment in a given payment period. For example, you can use IPMT to get the interest amount of a payment for the first period, the last period, or any period in between.', 'Purpose' : 'Get interest in given period', 'Return value' : 'The interest amount', 'Arguments' : 'rate - The interest rate per period.per - The payment period of interest.nper - The total number of payment periods.pv - The present value, or total value of all payments now.fv - [optional] The cash balance desired after last payment is made. Defaults to 0.type - [optional] When payments are due. 0 = end of period. 1 = beginning of period. Default is 0.', 'Syntax' : '=IPMT(rate, per, nper, pv, [fv], [type])' },
'IRR' : { 'Summary' : 'The Excel IRR function is a financial function that returns the internal rate of return (IRR) for a series of cash flows that occur at regular intervals.', 'Purpose' : 'Calculate internal rate of return', 'Return value' : 'Calculated return as percentage', 'Arguments' : 'values - Array or reference to cells that contain values.guess - [optional] An estimate for expected IRR. Default is .1 (10%).', 'Syntax' : '=IRR(values, [guess])' },
'ISPMT' : { 'Summary' : 'The Excel ISPMT function calculates the interest paid during a given period of an investment where principal payments are equal. The given period is specified as a zero-based number instead of a 1-based number.', 'Purpose' : 'Get interest paid for specific period', 'Return value' : 'Interest amount in given period', 'Arguments' : 'rate - Interest rate.per - Period (starts with zero, not 1).nper - Number of periods.pv - Present value.', 'Syntax' : '=ISPMT(rate, per, nper, pv)' },
'MDURATION' : { 'Summary' : 'The Excel MDURATION function returns the Macauley modified duration for a security with an assumed par value of $100', 'Purpose' : 'Get Macauley modified duration par value of $100', 'Return value' : 'Modified duration in years', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.coupon - The security\'s annual coupon rate.yld - The security\'s annual yield.freq - Number of coupon payments per year (annual = 1, semi-annual = 2, quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=MDURATION(settlement, maturity, coupon, yld, freq, [basis])' },
'MIRR' : { 'Summary' : 'The Excel MIRR function is a financial function that returns the modified internal rate of return (MIRR) for a series of cash flows, taking into account both discount rate and reinvestment rate for future cash flows.', 'Purpose' : 'Calculate modified internal rate of return', 'Return value' : 'Calculated return as percentage', 'Arguments' : 'values - Array or reference to cells that contain cash flows.finance_rate - Required rate of return (discount rate) as percentage.reinvest_rate - Interest rate received on cash flows reinvested as percentage.', 'Syntax' : '=MIRR(values, finance_rate, reinvest_rate)' },
'NOMINAL' : { 'Summary' : 'The Excel NOMINAL function returns the nominal interest rate when given an effective annual interest rate and the number of compounding periods per year. The effective rate is the actual rate due to compounding. The nominal rate is typically the stated rate.', 'Purpose' : 'Get annual nominal interest rate', 'Return value' : 'Nominal interest rate', 'Arguments' : 'effect_rate - The effective annual interest rate.npery - Number of compounding periods per year.', 'Syntax' : '=NOMINAL(effect_rate, npery)' },
'NPER' : { 'Summary' : 'The Excel NPER function is a financial function that returns the number of periods for a loan or investment. You can use the NPER function to get the number of payment periods for a loan, given the amount, the interest rate, and periodic payment amount.', 'Purpose' : 'Get number of periods for loan or investment', 'Return value' : 'The number of periods', 'Arguments' : 'rate - The interest rate per period.pmt - The payment made each period.pv - The present value, or total value of all payments now.fv - [optional] The future value, or a cash balance you want after the last payment is made. Defaults to 0.type - [optional] When payments are due. 0 = end of period. 1 = beginning of period. Default is 0.', 'Syntax' : '=NPER(rate, pmt, pv, [fv], [type])' },
'NPV' : { 'Summary' : 'The Excel NPV function is a financial function that calculates the net present value (NPV) of an investment using a discount rate and a series of future cash flows.', 'Purpose' : 'Calculate net present value', 'Return value' : 'Net present value', 'Arguments' : 'rate - Discount rate over one period.value1 - First value(s) representing cash flows.value2 - [optional] Second value(s) representing cash flows.', 'Syntax' : '=NPV(rate, value1, [value2], ...)' },
'ODDFPRICE' : { 'Summary' : 'The Excel ODDFPRICE function returns the price per $100 face value of a security with an odd (irregular) first period.', 'Purpose' : 'Get price per $100 odd first period', 'Return value' : 'Bond price', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.id - Issue date of the security.fd - First coupon date.rate - Annual coupon rate of security.yld - Annual required rate of return.redem - Redemption value per $100 face value.freq - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=ODDFPRICE(sd, md, id, fd, rate, yld, redem, freq, [basis])' },
'ODDFYIELD' : { 'Summary' : 'The Excel ODDFYIELD function returns the yield of a security with an odd (irregular) first period.', 'Purpose' : 'Get yield security with odd first period', 'Return value' : 'Yield as percentage', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.id - Issue date of the security.fd - First coupon date.rate - Annual coupon rate of security.pr - Price of security.redem - Redemption value per $100 face value.freq - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=ODDFYIELD(sd, md, id, fd, rate, pr, redem, freq, [basis])' },
'ODDLPRICE' : { 'Summary' : 'The Excel ODDLPRICE function returns the price per $100 face value of a security with an odd (irregular) last period.', 'Purpose' : 'Get price per $100 face value with odd last period', 'Return value' : 'Bond price', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.id - Last interest date of security.rate - Interest rate of security.yld - Annual required rate of return.redem - Redemption value per $100 face value.freq - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=ODDLPRICE(sd, md, id, rate, yld, redem, freq, [basis])' },
'ODDLYIELD' : { 'Summary' : 'The Excel ODDLYIELD function returns the yield of a security with an odd (irregular) last period.', 'Purpose' : 'Get yield of security with odd last period', 'Return value' : 'Yield as percentage', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.ld - Last interest date of security.rate - Interest rate of security.pr - Price per $100 face value.redem - Redemption value per $100 face value.freq - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=ODDLYIELD(sd, md, ld, rate, pr, redem, freq, [basis])' },
'PDURATION' : { 'Summary' : 'The Excel PDURATION function returns the number of periods required for an investment to reach a desired value.', 'Purpose' : 'Get periods required to reach given value', 'Return value' : 'Required time in periods', 'Arguments' : 'rate - Interest rate per period.pv - Present value of the investment.fv - Future value of the investment.', 'Syntax' : '=PDURATION(rate, pv, fv)' },
'PMT' : { 'Summary' : 'The Excel PMT function is a financial function that returns the periodic payment for a loan. You can use the PMT function to figure out payments for a loan, given the loan amount, number of periods, and interest rate.', 'Purpose' : 'Get the periodic payment for a loan', 'Return value' : 'loan payment as a number', 'Arguments' : 'rate - The interest rate for the loan.nper - The total number of payments for the loan.pv - The present value, or total value of all loan payments now.fv - [optional] The future value, or a cash balance you want after the last payment is made. Defaults to 0 (zero).type - [optional] When payments are due. 0 = end of period. 1 = beginning of period. Default is 0.', 'Syntax' : '=PMT(rate, nper, pv, [fv], [type])' },
'PPMT' : { 'Summary' : 'The Excel PPMT function can be used to calculate the principal portion of a given loan payment. For example, you can use PPMT to get the principal amount of a payment for the first period, the last period, or any period in between.', 'Purpose' : 'Get principal payment in given period', 'Return value' : 'The principal payment', 'Arguments' : 'rate - The interest rate per period.per - The payment period of interest.nper - The total number of payments for the loan.pv - The present value, or total value of all payments now.fv - [optional] The cash balance desired after last payment is made. Defaults to 0.type - [optional] When payments are due. 0 = end of period. 1 = beginning of period. Default is 0.', 'Syntax' : '=PPMT(rate, per, nper, pv, [fv], [type])' },
'PRICE' : { 'Summary' : 'The Excel PRICE function returns the price per $100 face value of a security that pays periodic interest.', 'Purpose' : 'Get price per $100 face value - periodic interest', 'Return value' : 'Bond price', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.rate - Annual coupon rate.yld - Annual required rate of return.redemption - Redemption value per $100 face value.frequency - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=PRICE(sd, md, rate, yld, redemption, frequency, [basis])' },
'PRICEDISC' : { 'Summary' : 'The Excel PRICEDISC function returns the price per $100 face value of a discounted security.', 'Purpose' : 'Get price per $100 discounted security', 'Return value' : 'Bond price', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.discount - Discount rate of the security.redemption - Redemption value per $100 face value.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=PRICEDISC(sd, md, discount, redemption, [basis])' },
'PRICEMAT' : { 'Summary' : 'The Excel PRICEMAT function returns the price per $100 face value of a security that pays interest at maturity.', 'Purpose' : 'Get price per $100 interest at maturity', 'Return value' : 'Bond price', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.id - Issue date of the security.rate - Security interest rate at date of issue.yld - Annual yield of the security.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=PRICEMAT(sd, md, id, rate, yld, [basis])' },
'PV' : { 'Summary' : 'The Excel PV function is a financial function that returns the present value of an investment. You can use the PV function to get the value in today\'s dollars of a series of future payments, assuming periodic, constant payments and a constant interest rate.', 'Purpose' : 'Get the present value of an investment', 'Return value' : 'Present value', 'Arguments' : 'rate - The interest rate per period.nper - The number of payment periods.pmt - The payment made each period.fv - [optional] Future value. If omitted, defaults to zero.type - [optional] Payment type, 0 = end of period, 1 = beginning of period. Default is 0.', 'Syntax' : '=PV(rate, nper, pmt, [fv], [type])' },
'RATE' : { 'Summary' : 'The Excel RATE function is a financial function that returns the interest rate per period of an annuity. You can use RATE to calculate the periodic interest rate, then multiply as required to derive the annual interest rate. The RATE function calculates by iteration.', 'Purpose' : 'Get the interest rate per period of an annuity', 'Return value' : 'The interest rate per period', 'Arguments' : 'nper - The total number of payment periods.pmt - The payment made each period.pv - The present value, or total value of all loan payments now.fv - [optional] The future value, or desired cash balance after last payment. Default is 0.type - [optional] When payments are due. 0 = end of period. 1 = beginning of period. Default is 0.guess - [optional] Your guess on the rate. Default is 10%.', 'Syntax' : '=RATE(nper, pmt, pv, [fv], [type], [guess])' },
'RECEIVED' : { 'Summary' : 'The Excel RECEIVED function returns the amount received at maturity for a fully invested security.', 'Purpose' : 'Get amount received at maturity', 'Return value' : 'Amount received', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.investment - Amount investment in the security.discount - The security\'s discount rate.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=RECEIVED(settlement, maturity, investment, discount, [basis])' },
'RRI' : { 'Summary' : 'The Excel RRI function returns an equivalent interest rate for the growth of an investment. You can use RRI to calculate Compound Annual Growth Rate (CAGR) in Excel.', 'Purpose' : 'Get equivalent interest rate for growth', 'Return value' : 'Calculated interest rate', 'Arguments' : 'nper - Number of periods.pv - Present value of investment.fv - Future value of investment.', 'Syntax' : '=RRI(nper, pv, fv)' },
'SLN' : { 'Summary' : 'The Excel SLN function returns the depreciation of an asset for one period, calculated with a straight-line method. The calculated depreciation is based on initial asset cost, salvage value, and the number of periods over which the asset is depreciated.', 'Purpose' : 'Depreciation - straight-line', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Initial cost of asset.salvage - Asset value at the end of the depreciation.life - Periods over which asset is depreciated.', 'Syntax' : '=SLN(cost, salvage, life)' },
'SYD' : { 'Summary' : 'The Excel SYD function returns the "sum-of-years" depreciation for an asset in a given period. The calculated depreciation is based on initial asset cost, salvage value, and the number of periods over which the asset is depreciated.', 'Purpose' : 'Depreciation - sum-of-years', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Initial cost of asset.salvage - Asset value at the end of the depreciation.life - Periods over which asset is depreciated.period - Period to calculation depreciation for.', 'Syntax' : '=SYD(cost, salvage, life, period)' },
'TBILLEQ' : { 'Summary' : 'The Excel TBILLEQ function returns the bond-equivalent yield for a Treasury bill.', 'Purpose' : 'Get bond-equivalent yield for a Treasury bill', 'Return value' : 'Yield as percentage', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.discount - Discount rate of the security.', 'Syntax' : '=TBILLEQ(settlement, maturity, discount)' },
'TBILLPRICE' : { 'Summary' : 'The Excel TBILLPRICE function returns the price per $100 face value for a Treasury bill.', 'Purpose' : 'Get price per $100 Treasury bill', 'Return value' : 'Price per $100', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.discount - The discount rate for the security.', 'Syntax' : '=TBILLPRICE(settlement, maturity, discount)' },
'TBILLYIELD' : { 'Summary' : 'The Excel TBILLYIELD function returns the yield for a Treasury bill.', 'Purpose' : 'Get yield for a Treasury bill', 'Return value' : 'Yield as percentage', 'Arguments' : 'settlement - Settlement date of the security.maturity - Maturity date of the security.price - Price per $100.', 'Syntax' : '=TBILLYIELD(settlement, maturity, price)' },
'VDB' : { 'Summary' : 'The Excel VDB function returns the depreciation of an asset for given period, using the double-declining balance method or another method specified by changing the factor argument. By default, the VDB function will switch to straight line calculation. VDB stands for variable declining balance.', 'Purpose' : 'Depreciation - double-declining variable', 'Return value' : 'Depreciation in given period', 'Arguments' : 'cost - Initial cost of asset.salvage - Asset value at the end of the depreciation.life - Periods over which asset is depreciated.start - Start period.end - End period.factor - [optional] Rate at which the balance declines. If omitted, defaults to 2.no_switch - [optional] Don\'t switch to straight line. Default is FALSE.', 'Syntax' : '=VDB(cost, salvage, life, start, end, [factor], [no_switch])' },
'XIRR' : { 'Summary' : 'The Excel XIRR function is a financial function that returns the internal rate of return (IRR) for a series of cash flows that occur at irregular intervals. The XIRR function uses iteration to arrive at a result.', 'Purpose' : 'Calculate internal rate of return for irregular cash flows', 'Return value' : 'Calculated internal rate of return', 'Arguments' : 'values - Array or reference to cells that contain cash flows.dates - Dates that correspond to cash flows, in any order.guess - [optional] An estimate for expected IRR. Default is 0.1 (10%).', 'Syntax' : '=XIRR(values, dates, [guess])' },
'XNPV' : { 'Summary' : 'The Excel XNPV function is a financial function that calculates the net present value (NPV) of an investment using a discount rate and a series of cash flows that occur at irregular intervals.', 'Purpose' : 'Calculate net present value for irregular cash flows', 'Return value' : 'Net present value', 'Arguments' : 'rate - Discount rate to apply to the cash flows.values - Values representing cash flows.dates - Dates that correspond to cash flows, in any order.', 'Syntax' : '=XNPV(rate, values, dates)' },
'YIELD' : { 'Summary' : 'The Excel YIELD function returns the yield on a security that pays periodic interest.', 'Purpose' : 'Get yield for security that pays periodic interest', 'Return value' : 'Yield as percentage', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.rate - Annual coupon rate.pr - Security\'s price per $100 face value.redemption - Redemption value per $100 face value.frequency - Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=YIELD(sd, md, rate, pr, redemption, frequency, [basis])' },
'YIELDDISC' : { 'Summary' : 'The Excel YIELDDISC function returns the annual yield for a discounted security, such as a Treasury bill, that is issued at a discount but that matures at face value.', 'Purpose' : 'Get annual yield for discounted security', 'Return value' : 'Yield as percentage', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.pr - Price of security.redemption - Redemption value per $100 face value.basis - [optional] Day count basis (see below, default =0).', 'Syntax' : '=YIELDDISC(sd, md, pr, redemption, [basis])' },
'YIELDMAT' : { 'Summary' : 'The Excel YIELDMAT function returns the annual yield of a security that pays interest at maturity.', 'Purpose' : 'Get annual yield of security interest at maturity', 'Return value' : 'Yield as percentage', 'Arguments' : 'sd - Settlement date of the security.md - Maturity date of the security.id - Issue date of the security.rate - Interest rate of security.pr - Price per $100 face value.basis - [optional] Coupon payments per year (annual = 1, semiannual = 2; quarterly = 4).', 'Syntax' : '=YIELDMAT(sd, md, id, rate, pr, [basis])' },
'CELL' : { 'Summary' : 'The Excel CELL function returns information about a cell in a worksheet. The type of information to be returned is specified as info_type. CELL can get things like address and filename, as well as detailed info about the formatting used in the cell. See below for a full list of information available.', 'Purpose' : 'Get information about a cell', 'Return value' : 'A text value', 'Arguments' : 'info_type - The type of information to return about the reference.reference - [optional] The reference from which to extract information.', 'Syntax' : '=CELL(info_type, [reference])' },
'INFO' : { 'Summary' : 'The Excel INFO function returns information about the current environment, including platform, Excel version, number of worksheets in a workbook, and so on. To use the INFO function, supply the type of information you want as text. There are seven types of information available, summarized in the table below.', 'Purpose' : 'Get information about current environment', 'Return value' : 'The information requested', 'Arguments' : 'type_text - The information type to return as text.', 'Syntax' : '=INFO(type_text)' },
'ISBLANK' : { 'Summary' : 'The Excel ISBLANK function returns TRUE when a cell is empty, and FALSE when a cell is not empty. For example, if A1 contains "apple", ISBLANK(A1) returns FALSE.', 'Purpose' : 'Test if a cell is empty', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check.', 'Syntax' : '=ISBLANK(value)' },
'ISERR' : { 'Summary' : 'The Excel ISERR function returns TRUE for any error type except the #N/A error. You can use the ISERR function together with the IF function to test for an error and display a custom message, or perform a different calculation if found.', 'Purpose' : 'Test for any error but #N/A', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check for any error but #N/A.', 'Syntax' : '=ISERR(value)' },
'ISERROR' : { 'Summary' : 'The Excel ISERROR function returns TRUE for any error type excel generates, including #N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL! You can use ISERROR together with the IF function to test for errors and display a custom message, or run a different calculation when an error occurs.', 'Purpose' : 'Test for any error', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check for any error.', 'Syntax' : '=ISERROR(value)' },
'ISEVEN' : { 'Summary' : 'The Excel ISEVEN function returns TRUE when a value is an even number, and FALSE when a value is an odd number. ISEVEN will return the #VALUE error if a value is not numeric.', 'Purpose' : 'Test if a value is even', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The numeric value to check.', 'Syntax' : '=ISEVEN(value)' },
'ISFORMULA' : { 'Summary' : 'The Excel ISFORMULA function returns TRUE if a cell contains a formula, and FALSE if not. When a cell contains a formula ISFORMULA will return TRUE regardless of the formula\'s output or error conditions.', 'Purpose' : 'Test if cell contains a formula', 'Return value' : 'TRUE or FALSE', 'Arguments' : 'reference - Reference to cell or cell range.', 'Syntax' : '=ISFORMULA(reference)' },
'ISLOGICAL' : { 'Summary' : 'The Excel ISLOGICAL function returns TRUE when a cell contains the logical values TRUE or FALSE, and returns FALSE for cells that contain any other value, including empty cells. ', 'Purpose' : 'Test if a value is logical', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to test as logical.', 'Syntax' : '=ISLOGICAL(value)' },
'ISNA' : { 'Summary' : 'The Excel ISNA function returns TRUE when a cell contains the #N/A error and FALSE for any other value, or any other error type. You can use the ISNA function with the IF function test for #N/A and display a friendly message if the error occurs.', 'Purpose' : 'Test for the #N/A error', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check if #N/A.', 'Syntax' : '=ISNA(value)' },
'ISNONTEXT' : { 'Summary' : 'The Excel ISNONTEXT function returns TRUE when a cell contains any value except text. This includes numbers, dates, times, errors, and formulas that do not return text. ISNONTEXT also returns TRUE when a cell is empty.', 'Purpose' : 'Test for a non-text value', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check.', 'Syntax' : '=ISNONTEXT(value)' },
'ISNUMBER' : { 'Summary' : 'The Excel ISNUMBER function returns TRUE when a cell contains a number, and FALSE if not. You can use ISNUMBER to check that a cell contains a numeric value, or that the result of another function is a number.', 'Purpose' : 'Test for numeric value', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check.', 'Syntax' : '=ISNUMBER(value)' },
'ISODD' : { 'Summary' : 'The Excel ISODD function returns TRUE when a value is an odd number, and FALSE when a value is an even number. ISODD will return the #VALUE error if a value is not numeric.', 'Purpose' : 'Test if a value is odd', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The numeric value to check.', 'Syntax' : '=ISODD(value)' },
'ISREF' : { 'Summary' : 'The Excel ISREF returns TRUE when a cell contains a reference and FALSE if not. You can use the ISREF function to check for a reference in a formula.', 'Purpose' : 'Test for a reference', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check.', 'Syntax' : '=ISREF(value)' },
'ISTEXT' : { 'Summary' : 'The Excel ISTEXT function returns TRUE when a cell contains a text value, and FALSE if the cell contains any other value. You can use the ISTEXT function to check if a cell contains a text value, or a numeric value entered as text.', 'Purpose' : 'Test for a text value', 'Return value' : 'A logical value (TRUE or FALSE)', 'Arguments' : 'value - The value to check.', 'Syntax' : '=ISTEXT(value)' },
'N' : { 'Summary' : 'The Excel N function returns a number when given a value. The N function can be used to convert TRUE and FALSE to 1 and 0 respectively. When given a text value, the N function returns zero.', 'Purpose' : 'Convert a value to a number', 'Return value' : 'A number or error code', 'Arguments' : 'value - The value to convert to a number.', 'Syntax' : '=N(value)' },
'NA' : { 'Summary' : 'The Excel NA function returns the #N/A error. #N/A means "not available" or "no value available". You can use the NA function to display the #N/A error when information is missing.', 'Purpose' : 'Create an #N/A error', 'Return value' : 'The #N/A error', 'Arguments' : '', 'Syntax' : '=NA()' },
'SHEET' : { 'Summary' : 'The Excel SHEET function returns the index number of a sheet in Excel. SHEET will report the sheet number for a cell reference, named range, or Excel Table.', 'Purpose' : 'Get sheet index number', 'Return value' : 'The index number of a given sheet', 'Arguments' : 'value - [optional] The value to check.', 'Syntax' : '=SHEET([value])' },
'SHEETS' : { 'Summary' : 'The Excel SHEETS function returns the total number of sheets in a given reference. When no arguments are supplied SHEETS returns the total number of sheets in the workbook.', 'Purpose' : 'Get number of sheets in a reference', 'Return value' : 'Sheet count', 'Arguments' : 'reference - [optional] A valid Excel reference.', 'Syntax' : '=SHEETS([reference])' },
'T' : { 'Summary' : 'The Excel T function returns text when given a text value and an empty string ("") for numbers, dates, and the logical values TRUE and FALSE. You can use the T function to remove values that are not text.', 'Purpose' : 'Filter text values only', 'Return value' : 'Value as text when text', 'Arguments' : 'value - The value to return as text.', 'Syntax' : '=T(value)' },
'TYPE' : { 'Summary' : 'The Excel TYPE function returns a numeric code representing "type" in 5 categories: number = 1, text = 2, logical = 4, error = 16, and array = 64. Use TYPE when the operation of a formula depends on the type of value in a particular cell.', 'Purpose' : 'Get the type of value in a cell', 'Return value' : 'A numeric code representing type', 'Arguments' : 'value - The value to check the type of.', 'Syntax' : '=TYPE(value)' },
'ABS' : { 'Summary' : 'The Excel ABS function returns the absolute value of a number. ABS converts negative numbers to positive numbers, and positive numbers are unaffected.', 'Purpose' : 'Find the absolute value of a number', 'Return value' : 'A positive number.', 'Arguments' : 'number - The number to get the absolute value of.', 'Syntax' : '=ABS(number)' },
'AGGREGATE' : { 'Summary' : 'The Excel AGGREGATE function returns a aggregate calculation like AVERAGE, COUNT, MAX, etc., optionally ignoring hidden rows and errors. A total of 19 operations are available, specified by function number in the first argument (see table for options).', 'Purpose' : 'Return aggregate calculation', 'Return value' : 'Depends on function specified', 'Arguments' : 'function_num - Operation to perform (1-19).options - Values to ignore (0-7).ref1 - First argument.ref2 - [optional] Second argument (k).', 'Syntax' : '=AGGREGATE(function_num, options, ref1, [ref2], ...)' },
'ARABIC' : { 'Summary' : 'The Excel ARABIC function converts a Roman numeral as text to an Arabic numeral. For example, the formula =ARABIC("VII") returns 7.', 'Purpose' : 'Converts a Roman numerals to an Arabic numerals', 'Return value' : 'A number (in Arabic numeral)', 'Arguments' : 'roman_text - The Roman numeral in text that you want to convert.', 'Syntax' : '=ARABIC(roman_text)' },
'BASE' : { 'Summary' : 'The Excel BASE function converts a number to the text representation of the same number in a given base, where base is provided as the radix argument.', 'Purpose' : 'Convert number to another base.', 'Return value' : 'The text representation of the converted number.', 'Arguments' : 'number - The number to convert to a given base.radix - The base to convert to.min_length - [optional] The minimum string length to return, achieved by padding with zeros.', 'Syntax' : '=BASE(number, radix, [min_length])' },
'CEILING' : { 'Summary' : 'The Excel CEILING function rounds a given number up to the nearest specified multiple. CEILING works like the MROUND function, but CEILING always rounds up.', 'Purpose' : 'Round a number up to nearest multiple', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number that should be rounded.significance - The multiple to use when rounding.', 'Syntax' : '=CEILING(number, significance)' },
'CEILING.MATH' : { 'Summary' : 'The Excel CEILING.MATH function rounds a number up to a specified multiple. Unlike the CEILING function, CEILING.MATH defaults to a multiple of 1, and provides explicit control over rounding direction for negative numbers.', 'Purpose' : 'Round a number up to nearest multiple', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number that should be rounded.significance - [optional] Multiple to use when rounding. Default is 1.mode - [optional] Round negative numbers toward or away from zero. Default is 0.', 'Syntax' : '=CEILING.MATH(number, [significance], [mode])' },
'CEILING.PRECISE' : { 'Summary' : 'The Excel CEILING.PRECISE function rounds a number up to a given multiple. CEILING.PRECISE defaults to a multiple of 1, and always rounds negative numbers toward zero.', 'Purpose' : 'Round a number up to nearest multiple', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number that should be rounded.significance - [optional] Multiple to use when rounding. Default is 1.', 'Syntax' : '=CEILING.PRECISE(number, [significance])' },
'COMBIN' : { 'Summary' : 'The Excel COMBIN function returns the number of combinations for a given number of items. The COMBIN function does not allow repetitions. To count combinations that allow repetitions, use the COMBINA function.', 'Purpose' : 'Get number of combinations without repetitions', 'Return value' : 'Number of combinations as an integer', 'Arguments' : 'number - The total number of items.number_chosen - The number of items in each combination.', 'Syntax' : '=COMBIN(number, number_chosen)' },
'COMBINA' : { 'Summary' : 'The Excel COMBINA function returns the number of combinations with repetitions allowed. To count combinations that do not allow repetitions, use the COMBIN function.', 'Purpose' : 'Get number of combinations with repetitions', 'Return value' : 'Number of combinations as an integer', 'Arguments' : 'number - The total number of items.number_chosen - The number of items in each combination.', 'Syntax' : '=COMBINA(number, number_chosen)' },
'DECIMAL' : { 'Summary' : 'The Excel DECIMAL function converts a number in a given base into its decimal number equivalent. For example, the DECIMAL function can convert the binary number 1101 into the decimal number 13.', 'Purpose' : 'Convert a number in a different base to a decimal number', 'Return value' : 'Decimal number', 'Arguments' : 'number - A text string representing a number.radix - The base of the number to be converted, an integer between 2-36.', 'Syntax' : '=DECIMAL(number, radix)' },
'EVEN' : { 'Summary' : 'The Excel EVEN function rounds numbers up to the next even integer. The EVEN function always rounds numbers away from zero, so positive numbers become larger and negative numbers become smaller (i.e. more negative).', 'Purpose' : 'Round a number up to the next even integer', 'Return value' : 'An even integer.', 'Arguments' : 'number - The number to round up to an even integer.', 'Syntax' : '=EVEN(number)' },
'FACT' : { 'Summary' : 'The Excel FACT function returns the factorial of a given number. For example, =FACT(3) returns 6, equivalent to 3 x 2 x 1.', 'Purpose' : 'Find the factorial of a number', 'Return value' : 'The factorial of a number', 'Arguments' : 'number - The number to get the factorial of.', 'Syntax' : '=FACT(number)' },
'FACTDOUBLE' : { 'Summary' : 'The Excel FACTDOUBLE function returns the double factorial of a number. A double factorial is symbolized by two exclamation marks (!!).', 'Purpose' : 'Get double factorial of a number', 'Return value' : 'Calculated doublefactorial', 'Arguments' : 'number - A number greater than or equal to -1.', 'Syntax' : '=FACTDOUBLE(number)' },
'FLOOR' : { 'Summary' : 'The Excel FLOOR function rounds a given number down to the nearest specified multiple. FLOOR works like the MROUND function, but FLOOR always rounds down.', 'Purpose' : 'Round a number down to the nearest specified multiple', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number that should be rounded.significance - The multiple to use when rounding.', 'Syntax' : '=FLOOR(number, significance)' },
'FLOOR.MATH' : { 'Summary' : 'The Excel FLOOR.MATH function rounds a number down to a specified multiple. Unlike the FLOOR function, FLOOR.MATH defaults to a multiple of 1, and provides explicit support for rounding negative numbers.', 'Purpose' : 'Round number down to nearest multiple', 'Return value' : 'A rounded number', 'Arguments' : 'number - The number that should be rounded.significance - [optional] Multiple to use when rounding. Default is 1.mode - [optional] For rounding negative numbers toward or away from zero. Default is 0.', 'Syntax' : '=FLOOR.MATH(number, [significance], [mode])' },
'FLOOR.PRECISE' : { 'Summary' : 'The Excel FLOOR.PRECISE function rounds a number down to a given multiple. FLOOR.PRECISE defaults to a multiple of 1, and always rounds negative numbers away from zero.', 'Purpose' : 'Round number down to nearest multiple', 'Return value' : 'A rounded number', 'Arguments' : 'number - The number that should be rounded.significance - [optional] Multiple to use when rounding. Default is 1.', 'Syntax' : '=FLOOR.PRECISE(number, [significance])' },
'GCD' : { 'Summary' : 'The Excel GCD function returns the greatest common divisor of two or more integers. The greatest common divisor is the largest integer that goes into all supplied numbers without a remainder. For example, =GCD(60,36) returns 12.', 'Purpose' : 'Get the greatest common divisor of numbers', 'Return value' : 'The largest positive integer that divides the numbers evenly', 'Arguments' : 'number1 - The first number.number2 - [optional] The second number.', 'Syntax' : '=GCD(number1, [number2], ...)' },
'INT' : { 'Summary' : 'The Excel INT function returns the integer part of a decimal number by rounding down to the integer. Note that negative numbers become more negative. For example, while INT(10.8) returns 10, INT(-10.8) returns -11.', 'Purpose' : 'Get the integer part of a number by rounding down', 'Return value' : 'The integer part of the number after rounding down', 'Arguments' : 'number - The number from which you want an integer.', 'Syntax' : '=INT(number)' },
'LCM' : { 'Summary' : 'The Excel LCM function returns the least common multiple of integers. The least common multiple is the smallest positive integer that is a multiple of all supplied numbers. For example, =LCM(25,40) returns 200.', 'Purpose' : 'Get the least common multiple of numbers', 'Return value' : 'The least common multiple of all numbers', 'Arguments' : 'number1 - The first number.number2 - [optional] The second number.', 'Syntax' : '=LCM(number1, [number2], ...)' },
'LOG' : { 'Summary' : 'The Excel LOG function returns the logarithm of a given number, using a supplied base. The base argument defaults to 10 if not supplied.', 'Purpose' : 'Get the logarithm of a number', 'Return value' : 'The logarithm', 'Arguments' : 'number - Number for which you want the logarithm.base - [optional] Base of the logarithm. Defaults to 10.', 'Syntax' : '=LOG(number, [base])' },
'LOG10' : { 'Summary' : 'The Excel LOG10 function returns the base 10 logarithm of a number. For example, LOG10(100) returns 2, and LOG10(1000) returns 3.', 'Purpose' : 'Get the base-10 logarithm of a number', 'Return value' : 'The logarithm', 'Arguments' : 'number - Number for which you want the logarithm.', 'Syntax' : '=LOG10(number)' },
'MDETERM' : { 'Summary' : 'The Excel MDETERM function returns the matrix determinant of a given array. The input array must contain numbers only and be a square matrix, with equal rows and columns. The result is a number representing the matrix determinant.', 'Purpose' : 'Get matrix determinant of given array', 'Return value' : 'A number representing the matrix determinant', 'Arguments' : 'array - A square array of numbers only.', 'Syntax' : '=MDETERM(array)' },
'MINVERSE' : { 'Summary' : 'The Excel MINVERSE function returns the inverse matrix of a given array. The input array must contain numbers only and be a square matrix, with equal rows and columns. The result is an inverse matrix with the same dimensions as the array provided.', 'Purpose' : 'Get inverse matrix of array', 'Return value' : 'Inverse matrix of array with same dimensions', 'Arguments' : 'array - A square array of numbers only.', 'Syntax' : '=MINVERSE(array)' },
'MMULT' : { 'Summary' : 'The Excel MMULT function returns the matrix product of two arrays. The result from MMULT is an array that contains the same number of rows as array1 and the same number of columns as array2. ', 'Purpose' : 'Perform matrix multiplication', 'Return value' : 'The matrix product of two arrays', 'Arguments' : 'array1 - The first array to multiply.array2 - The second array to multiply.', 'Syntax' : '=MMULT(array1, array2)' },
'MOD' : { 'Summary' : 'The Excel MOD function returns the remainder of two numbers after division. For example, MOD(10,3) = 1. The result of MOD carries the same sign as the divisor.', 'Purpose' : 'Get the remainder from division', 'Return value' : 'The remainder', 'Arguments' : 'number - The number to be divided.divisor - The number to divide with.', 'Syntax' : '=MOD(number, divisor)' },
'MROUND' : { 'Summary' : 'The Excel MROUND function returns a number rounded to a given multiple. MROUND will round a number up or down, depending on the nearest multiple.', 'Purpose' : 'Round a number to the nearest specified multiple', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number that should be rounded.significance - The multiple to use when rounding.', 'Syntax' : '=MROUND(number, significance)' },
'MUNIT' : { 'Summary' : 'The Excel MUNIT function returns a unit matrix for a given dimension, n, with a size of n x n. This resulting matrix contains ones on the main diagonal and zeros in every other position.', 'Purpose' : 'Return unit matrix for a given dimension', 'Return value' : 'Unix matrix of size n x n', 'Arguments' : 'dimension - An integer for the size of the unit matrix.', 'Syntax' : '=MUNIT(dimension)' },
'ODD' : { 'Summary' : 'The Excel ODD function returns the next odd integer after rounding a given number up. The ODD function always rounds numbers away from zero, so positive numbers become larger and negative numbers become smaller (i.e. more negative).', 'Purpose' : 'Round a number up to the next odd integer', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number to round up to an odd integer.', 'Syntax' : '=ODD(number)' },
'POWER' : { 'Summary' : 'The Excel POWER function returns a number raised to a given power. The POWER function is an alternative to the exponent operator (^).', 'Purpose' : 'Raise a number to a power', 'Return value' : 'Number raised to power', 'Arguments' : 'number - Number to raise to a power.power - Power to raise number to (the exponent).', 'Syntax' : '=POWER(number, power)' },
'PRODUCT' : { 'Summary' : 'The Excel PRODUCT function returns the product of numbers provided as arguments. The PRODUCT function is helpful when multiplying many cells together. The formula =PRODUCT(A1:A3) is the same as =A1*A2*A3.', 'Purpose' : 'Get the product of supplied numbers', 'Return value' : 'Product of supplied numbers', 'Arguments' : 'number1 - The first number or range to multiply.number2 - [optional] The second number or range to multiply.', 'Syntax' : '=PRODUCT(number1, [number2], ...)' },
'QUOTIENT' : { 'Summary' : 'The Excel QUOTIENT function returns the integer portion of division without the remainder. Use QUOTIENT to discard the remainder after division.', 'Purpose' : 'Returns the quotient without a remainder.', 'Return value' : 'Integer Number', 'Arguments' : 'numerator - The number to be divided.denominator - The number to divide by.', 'Syntax' : '=QUOTIENT(numerator, denominator)' },
'RAND' : { 'Summary' : 'The Excel RAND function returns a random number between 0 and 1. For example, =RAND() will generate a number like 0.422245717. RAND recalculates when a worksheet is opened or changed.', 'Purpose' : 'Get a random number between 0 and 1', 'Return value' : 'A number between 1 and 0', 'Arguments' : '', 'Syntax' : '=RAND()' },
'RANDBETWEEN' : { 'Summary' : 'The Excel RANDBETWEEN function returns a random integer between two given numbers. RANDBETWEEN recalculates each time a worksheet is opened or changed.', 'Purpose' : 'Get a random integer between two values', 'Return value' : 'An integer', 'Arguments' : 'bottom - An integer representing the lower value of the range.top - An integer representing the upper value of the range.', 'Syntax' : '=RANDBETWEEN(bottom, top)' },
'ROMAN' : { 'Summary' : 'The Excel ROMAN function converts a number to a Roman numeral as text. For example, the formula =ROMAN(4) returns IV.', 'Purpose' : 'Converts numbers to Roman numerals', 'Return value' : 'A Roman numeral in text', 'Arguments' : 'number - Number (in Arabic numeral) you want to convert to Roman numeral.form - [optional] The type of Roman numeral you want.', 'Syntax' : '=ROMAN(number, [form])' },
'ROUND' : { 'Summary' : 'The Excel ROUND function returns a number rounded to a given number of digits. The ROUND function can round to the right or left of the decimal point.', 'Purpose' : 'Round a number to a given number of digits', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number to round.num_digits - The place at which number should be rounded.', 'Syntax' : '=ROUND(number, num_digits)' },
'ROUNDDOWN' : { 'Summary' : 'The Excel ROUNDDOWN function returns a number rounded down to a given number of places. Unlike standard rounding, where only numbers less than 5 are rounded down, ROUNDDOWN rounds all numbers down.', 'Purpose' : 'Round down to given number of digits', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number to round down.num_digits - The place at which number should be rounded.', 'Syntax' : '=ROUNDDOWN(number, num_digits)' },
'ROUNDUP' : { 'Summary' : 'The Excel ROUNDUP function returns a number rounded up to a given number of decimal places. Unlike standard rounding, where only numbers less than 5 are rounded down, ROUNDUP rounds all numbers up.', 'Purpose' : 'Round a number up to a given number of digits', 'Return value' : 'A rounded number.', 'Arguments' : 'number - The number to round up.num_digits - The place at which number should be rounded.', 'Syntax' : '=ROUNDUP(number, num_digits)' },
'SQRT' : { 'Summary' : 'The Excel SQRT function returns the square root of a positive number. SQRT returns an error if number is negative.', 'Purpose' : 'Find the positive square root of a number', 'Return value' : 'Positive square root', 'Arguments' : 'number - The number to get the square root of.', 'Syntax' : '=SQRT(number)' },
'SUBTOTAL' : { 'Summary' : 'The Excel SUBTOTAL function is designed to run a given calculation on a range of cells while ignoring cells that should not be included. SUBTOTAL can return a SUM, AVERAGE, COUNT, MAX, and others (see complete list below), and SUBTOTAL function can either include or exclude values in hidden rows.', 'Purpose' : 'Get a subtotal in a list or database', 'Return value' : 'A number representing a specific kind of subtotal', 'Arguments' : 'function_num - A number that specifies which function to use in calculating subtotals within a list. See table below for full list.ref1 - A named range or reference to subtotal.ref2 - [optional] A named range or reference to subtotal.', 'Syntax' : '=SUBTOTAL(function_num, ref1, [ref2], ...)' },
'SUM' : { 'Summary' : 'The Excel SUM function returns the sum of values supplied. These values can be numbers, cell references, ranges, arrays, and constants, in any combination. SUM can handle up to 255 individual arguments.', 'Purpose' : 'Add numbers together', 'Return value' : 'The sum of values supplied.', 'Arguments' : 'number1 - The first value to sum.number2 - [optional] The second value to sum.number3 - [optional] The third value to sum.', 'Syntax' : '=SUM(number1, [number2], [number3], ...)' },
'SUMIF' : { 'Summary' : 'The Excel SUMIF function returns the sum of cells that meet a single condition. Criteria can be applied to dates, numbers, and text. The SUMIF function supports logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Sum cells in a range that meet criteria', 'Return value' : 'The sum of matching cells', 'Arguments' : 'range - Range to apply criteria to.criteria - Criteria to apply.sum_range - [optional] Range to sum. If omitted, cells in range are summed.', 'Syntax' : '=SUMIF(range, criteria, [sum_range])' },
'SUMIFS' : { 'Summary' : 'The SUMIFS function sums cells in a range that meet one or more conditions, referred to as criteria. SUMIFS can apply conditions based on dates, numbers, and text. SUMIFS supports logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Sum cells in a range that meet criteria', 'Return value' : 'The sum of cells that meet all criteria', 'Arguments' : 'sum_range - The range to be summed.range1 - The first range to evaulate.criteria1 - The criteria to use on range1.range2 - [optional] The second range to evaluate.criteria2 - [optional] The criteria to use on range2.', 'Syntax' : '=SUMIFS(sum_range, range1, criteria1, [range2], [criteria2], ...)' },
'SUMPRODUCT' : { 'Summary' : 'The Excel SUMPRODUCT function multiplies ranges or arrays together and returns the sum of products. This sounds boring, but SUMPRODUCT is an incredibly versatile function that can be used to count and sum like COUNTIFS or SUMIFS, but with more flexibility. Other functions can easily be used inside SUMPRODUCT to extend functionality even further.', 'Purpose' : 'Multiply, then sum arrays', 'Return value' : 'The result of multipled and summed arrays', 'Arguments' : 'array1 - The first array or range to multiply, then add.array2 - [optional] The second array or range to multiply, then add.', 'Syntax' : '=SUMPRODUCT(array1, [array2], ...)' },
'SUMSQ' : { 'Summary' : 'The Excel SUMSQ function returns the sum of the squares of the values provided. Values can be supplied as constants, cell references, or ranges.', 'Purpose' : 'Get sum of squares of supplied values', 'Return value' : 'Calculated sum of squares', 'Arguments' : 'number1 - The first argument containing numeric values.number2 - [optional] The first argument containing numeric values.', 'Syntax' : '=SUMSQ(number1, [number2], ...)' },
'SUMX2MY2' : { 'Summary' : 'The Excel SUMX2PY2 function returns the sum of the difference of squares of corresponding values in two arrays. Values can be supplied as constants, cell references, or ranges.', 'Purpose' : 'Sum of difference of squares in two arrays', 'Return value' : 'Calculated sum of difference of squares', 'Arguments' : 'array_x - The first range or array containing numeric values.array_y - The second range or array containing numeric values.', 'Syntax' : '=SUMX2MY2(array_x, array_y)' },
'SUMX2PY2' : { 'Summary' : 'The Excel SUMX2PY2 function returns the sum of the sum of squares of corresponding values in two arrays. Values can be supplied as constants, cell references, or ranges.', 'Purpose' : 'Get sum of squares in two arrays', 'Return value' : 'Calculated sum of sum of squares', 'Arguments' : 'array_x - The first range or array containing numeric values.array_y - The second range or array containing numeric values.', 'Syntax' : '=SUMX2PY2(array_x, array_y)' },
'SUMXMY2' : { 'Summary' : 'The Excel SUMXMY2 function returns the sum of squares of differences between corresponding values in two arrays. Values can be supplied as constants, cell references, or ranges.', 'Purpose' : 'Sum of squares of differences in two arrays', 'Return value' : 'Calculated sum of squares of differences', 'Arguments' : 'array_x - The first range or array containing numeric values.array_y - The second range or array containing numeric values.', 'Syntax' : '=SUMXMY2(array_x, array_y)' },
'TRUNC' : { 'Summary' : 'The Excel TRUNC function returns a truncated number based on an (optional) number of digits. For example, TRUNC(4.9) will return 4, and TRUNC(-3.5) will return -3. The TRUNC function does no rounding, it simply truncates as specified.', 'Purpose' : 'Truncate a number to a given precision', 'Return value' : 'A truncated number', 'Arguments' : 'number - The number to truncate.num_digits - [optional] The precision of the truncation (default is 0).', 'Syntax' : '=TRUNC(number, [num_digits])' },
'ATAN2' : { 'Summary' : 'The Excel ATAN2 function returns the arctangent from x- and y-coordinates. In geometric terms, the function returns the radian angle corresponding to the input point.', 'Purpose' : 'Get arctangent from x- and y-coordinates', 'Return value' : 'The angle in radians of the point.', 'Arguments' : 'x_num - The x coordinate of the input point.y_num - The y coordinate of the input point.', 'Syntax' : '=ATAN2(x_num, y_num)' },
'COS' : { 'Summary' : 'The Excel COS function returns the cosine of an angle given in radians. To supply an angle to COS in degrees, use the RADIANS function to convert to radians.', 'Purpose' : 'Get the cosine of an angle provided in radians.', 'Return value' : 'The cosine value', 'Arguments' : 'number - The angle in radians for which you want the cosine.', 'Syntax' : '=COS(number)' },
'COSH' : { 'Summary' : 'The Excel COSH function returns the hyperbolic cosine of a number.', 'Purpose' : 'Get hyperbolic cosine of a number', 'Return value' : 'The x-component of the hyperbolic angle.', 'Arguments' : 'number - The hyperbolic angle.', 'Syntax' : '=COSH(number)' },
'DEGREES' : { 'Summary' : 'The Excel DEGREES function converts angles (expressed in radians) to degrees. For example, the formula =DEGREES(PI()) returns 180.', 'Purpose' : 'Converts radians to degrees', 'Return value' : 'Degrees', 'Arguments' : 'angle - Angle in radians that you want to convert to degrees.', 'Syntax' : '=DEGREES(angle)' },
'SIN' : { 'Summary' : 'The Excel SIN function returns the sine of an angle given in radians. To supply an angle to SIN in degrees, multiply the angle by PI()/180 or use the RADIANS function to convert to radians.', 'Purpose' : 'Get the sine of an angle provided in radians.', 'Return value' : 'Sine value', 'Arguments' : 'number - The angle in radians for which you want the sine.', 'Syntax' : '=SIN(number)' },
'SINH' : { 'Summary' : 'The Excel SINH function returns the hyperbolic sine of a number.', 'Purpose' : 'Get hyperbolic sine of a number.', 'Return value' : 'The hyperbolic sine of a number.', 'Arguments' : 'number - The hyperbolic angle.', 'Syntax' : '=SINH(number)' },
'AVEDEV' : { 'Summary' : 'The Excel AVEDEV function returns the average of the absolute value of deviations from the mean for a given set of data. Average deviation is a measure of variability.', 'Purpose' : 'Get sum of squared deviations', 'Return value' : 'Calculated sum', 'Arguments' : 'number1 - First value or reference.number2 - [optional] Second value or reference.', 'Syntax' : '=AVEDEV(number1, [number2], ...)' },
'AVERAGE' : { 'Summary' : 'The Excel AVERAGE function calculates the average (arithmetic mean) of supplied numbers. AVERAGE can handle up to 255 individual arguments, which can include numbers, cell references, ranges, arrays, and constants.', 'Purpose' : 'Get the average of a group of numbers', 'Return value' : 'A number representing the average.', 'Arguments' : 'number1 - A number or cell reference that refers to numeric values.number2 - [optional] A number or cell reference that refers to numeric values.', 'Syntax' : '=AVERAGE(number1, [number2], ...)' },
'AVERAGEA' : { 'Summary' : 'The Excel AVERAGEA function returns the average of a set of supplied values. Unlike AVERAGE, AVERAGEA will also evaluate the logical values TRUE and FALSE, and numbers represented as text, whereas AVERAGE ignores these values during calculation', 'Purpose' : 'Get the average of a group of numbers and text', 'Return value' : 'A number representing the average.', 'Arguments' : 'value1 - A value or reference to a value that can be evaluated as a number.value2 - [optional] A value or reference to a value that can be evaluated as a number.', 'Syntax' : '=AVERAGEA(value1, [value2], ...)' },
'AVERAGEIF' : { 'Summary' : 'The Excel AVERAGEIF function calculates the average of numbers in a range that meet supplied criteria. AVERAGEIF criteria can include logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Get the average of numbers that meet criteria.', 'Return value' : 'A number representing the average.', 'Arguments' : 'range - One or more cells, including numbers or names, arrays, or references.criteria - A number, expression, cell reference, or text.average_range - [optional] The cells to average. When omitted, range is used.', 'Syntax' : '=AVERAGEIF(range, criteria, [average_range])' },
'AVERAGEIFS' : { 'Summary' : 'The Excel AVERAGEIFS function calculates the average of numbers in a range that meet one or more criteria. The criteria used for AVERAGEIFS can include logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Average cells that match multiple criteria', 'Return value' : 'The average of the cells that meet all criteria', 'Arguments' : 'avg_rng - The range to average.range1 - The first range to evaulate.criteria1 - The criteria to use on range1.range2 - [optional] The second range to evaluate.criteria2 - [optional] The criteria to use on range2.', 'Syntax' : '=AVERAGEIFS(avg_rng, range1, criteria1, [range2], [criteria2], ...)' },
'BINOM.DIST' : { 'Summary' : 'The Excel BINOM.DIST function returns the individual term binomial distribution probability. You can use BINOM.DIST to calculate probabilities that an event will occur a certain number of times in a given number of trials.', 'Purpose' : 'Get binomial distribution probability', 'Return value' : 'Calculated probability', 'Arguments' : 'number_s - The number of successes.trials - The number of independent trials.probability_s - The probability of success on each trial.cumulative - TRUE = cumulative distribution function, FALSE=probability mass function.', 'Syntax' : '=BINOM.DIST(number_s, trials, probability_s, cumulative)' },
'BINOMDIST' : { 'Summary' : 'The Excel BINOMDIST function returns the individual term binomial distribution probability. You can use BINOMDIST to calculate probabilities that an event will occur a certain number of times in a given number of trials.', 'Purpose' : 'Get binomial distribution probability', 'Return value' : 'Calculated probability', 'Arguments' : 'number_s - The number of successes.trials - The number of independent trials.probability_s - The probability of success on each trial.cumulative - TRUE = cumulative distribution function, FALSE=probability mass function.', 'Syntax' : '=BINOMDIST(number_s, trials, probability_s, cumulative)' },
'COUNT' : { 'Summary' : 'The Excel COUNT function returns a count of values that are numbers. Numbers include negative numbers, percentages, dates, times, fractions, and formulas that return numbers. Empty cells and text values are ignored.', 'Purpose' : 'Count numbers', 'Return value' : 'Count of numeric values', 'Arguments' : 'value1 - An item, cell reference, or range.value2 - [optional] An item, cell reference, or range.', 'Syntax' : '=COUNT(value1, [value2], ...)' },
'COUNTA' : { 'Summary' : 'The Excel COUNTA function returns the count of cells that contain numbers, text, logical values, error values, and empty text (""). COUNTA does not count empty cells.', 'Purpose' : 'Count the number of non-blank cells', 'Return value' : 'A number representing non-blank cells.', 'Arguments' : 'value1 - An item, cell reference, or range.value2 - [optional] An item, cell reference, or range.', 'Syntax' : '=COUNTA(value1, [value2], ...)' },
'COUNTBLANK' : { 'Summary' : 'The Excel COUNTBLANK function returns a count of empty cells in a range. Cells that contain text, numbers, errors, spaces, etc. are not counted. Formulas that return empty strings ("") are counted as blank.', 'Purpose' : 'Count cells that are blank', 'Return value' : 'A number representing blank cells', 'Arguments' : 'range - The range in which to count blank cells.', 'Syntax' : '=COUNTBLANK(range)' },
'COUNTIF' : { 'Summary' : 'COUNTIF is an Excel function to count cells in a range that meet a single condition. COUNTIF can be used to count cells that contain dates, numbers, and text. The criteria used in COUNTIF supports logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Count cells that match criteria', 'Return value' : 'A number representing cells counted.', 'Arguments' : 'range - The range of cells to count.criteria - The criteria that controls which cells should be counted.', 'Syntax' : '=COUNTIF(range, criteria)' },
'COUNTIFS' : { 'Summary' : 'The Excel COUNTIFS function returns the count of cells that meet one or more criteria. COUNTIFS can be used to count cells that contain dates, numbers, and text, with logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : ' Count cells that match multiple criteria', 'Return value' : 'The number of times criteria are met', 'Arguments' : 'range1 - The first range to evaulate.criteria1 - The criteria to use on range1.range2 - [optional] The second range to evaluate.criteria2 - [optional] The criteria to use on range2.', 'Syntax' : '=COUNTIFS(range1, criteria1, [range2], [criteria2], ...)' },
'DEVSQ' : { 'Summary' : 'The Excel DEVSQ function returns the sum of the squared deviations from the mean for a given set of data. ', 'Purpose' : 'Get sum of squared deviations', 'Return value' : 'Calculated sum', 'Arguments' : 'number1 - First value or reference.number2 - [optional] Second value or reference.', 'Syntax' : '=DEVSQ(number1, [number2], ...)' },
'FORECAST' : { 'Summary' : 'The Excel FORECAST function predicts a value based on existing values along a linear trend. FORECAST calculates future value predictions using linear regression, and can be used to predict numeric values like sales, inventory, expenses, measurements, etc.', 'Purpose' : 'Predict value along a linear trend', 'Return value' : 'Predicted value', 'Arguments' : 'x - The x value data point to use to calculate a prediction.known_ys - The dependent array or range of data (y values).kown_xs - The independent array or range of data (x values).', 'Syntax' : '=FORECAST(x, known_ys, kown_xs)' },
'FORECAST.ETS' : { 'Summary' : 'The Excel FORECAST.ETS function predicts a value based on existing values that follow a seasonal trend. FORECAST.ETS can be used to predict numeric values like sales, inventory, expenses, etc. with a seasonal pattern.', 'Purpose' : 'Predict value with a seasonal trend', 'Return value' : 'Predicted value', 'Arguments' : 'target_date - The time or period for the prediction (x value).values - Existing or historical values (y values).timeline - Numeric timeline values (x values).seasonality - [optional] Seasonality calculation (0 = no seasonality, 1 = automatic, n = season length in timeline units).data_completion - [optional] Missing data treatment (0 = treat as zero, 1 = average). Default is 1.aggregation - [optional] Aggregation behavior. Default is 1 (AVERAGE). See other options below.', 'Syntax' : '=FORECAST.ETS(target_date, values, timeline, [seasonality], [data_completion], [aggregation])' },
'FORECAST.ETS.CONFINT' : { 'Summary' : 'The Excel FORECAST.ETS.CONFINT function returns a confidence interval for a forecast value at a specific point on a timeline. It is designed to be used along with the FORECAST.ETS function as a way to show forecast accuracy.', 'Purpose' : 'Get confidence interval for forecast value at given date', 'Return value' : 'Confidence interval value', 'Arguments' : 'target_date - The time or period for the prediction (x value).values - Existing or historical values (y values).timeline - Numeric timeline values (x values).confidence_level - [optional] A number between 0 and 1 (exclusive). Default = 0.95.seasonality - [optional] Seasonality calculation (0 = no seasonality, 1 = automatic, n = season length in timeline units).data_completion - [optional] Missing data treatment (0 = treat as zero, 1 = average). Default is 1.aggregation - [optional] Aggregation behavior. Default is 1 (AVERAGE). See other options below.', 'Syntax' : '=FORECAST.ETS.CONFINT(target_date, values, timeline, [confidence_level], [seasonality], [data_completion], [aggregation])' },
'FORECAST.ETS.SEASONALITY' : { 'Summary' : 'The Excel FORECAST.ETS.SEASONALITY function returns the length in time of a seasonal pattern based on existing values and a timeline.', 'Purpose' : 'Get length of the seasonal pattern', 'Return value' : 'Season length in timeline units', 'Arguments' : 'values - Existing or historical values (y values).timeline - Numeric timeline values (x values).data_completion - [optional] Missing data treatment (0 = treat as zero, 1 = average). Default is 1.aggregation - [optional] Aggregation behavior. Default is 1 (AVERAGE). See other options below.', 'Syntax' : '=FORECAST.ETS.SEASONALITY(values, timeline, [data_completion], [aggregation])' },
'FORECAST.ETS.STAT' : { 'Summary' : 'The Excel FORECAST.ETS.STAT function returns a particular statistical value relating related to time series forecasting with the FORECAST.ETS function. The statistic_type argument determines which statistic is returned by FORECAST.ETS.STAT.', 'Purpose' : 'Get statistical value related to forecasting', 'Return value' : 'Requested statistic', 'Arguments' : 'values - Existing or historical values (y values).timeline - Numeric timeline values (x values).statistic_type - The statistic to return, a numeric value between 1 and 8 (see table below).seasonality - [optional] Seasonality calculation (0 = no seasonality, 1 = automatic, n = season length in timeline units).data_completion - [optional] Missing data treatment (0 = treat as zero, 1 = average). Default is 1.aggregation - [optional] Aggregation behavior. Default is 1 (AVERAGE). See other options below.', 'Syntax' : '=FORECAST.ETS.STAT(values, timeline, statistic_type, [seasonality], [data_completion], [aggregation])' },
'FORECAST.LINEAR' : { 'Summary' : 'The Excel FORECAST function predicts a value based on existing values along a linear trend. FORECAST calculates future value predictions using linear regression, and can be used to predict numeric values like sales, inventory, expenses, measurements, etc.', 'Purpose' : 'Predict value along a linear trend', 'Return value' : 'Predicted value', 'Arguments' : 'x - The x value data point to use to calculate a prediction.known_ys - The dependent array or range of data (y values).kown_xs - The independent array or range of data (x values).', 'Syntax' : '=FORECAST.LINEAR(x, known_ys, kown_xs)' },
'FREQUENCY' : { 'Summary' : 'The Excel FREQUENCY function returns a frequency distribution, which is a list that shows the frequency of values at given intervals. FREQUENCY returns multiple values and must be entered as an array formula with control-shift-enter, except in Excel 365.', 'Purpose' : 'Get the frequency of values in a data set', 'Return value' : 'A vertical array of frequencies', 'Arguments' : 'data_array - An array of values for which you want to get frequencies.bins_array - An array of intervals ("bins") for grouping values.', 'Syntax' : '=FREQUENCY(data_array, bins_array)' },
'GEOMEAN' : { 'Summary' : 'The Excel GEOMEAN function returns the geometric mean for a set of numeric values. Geometric mean can be used to calculate average rate of return with variable rates.', 'Purpose' : 'Calculate geometric mean', 'Return value' : 'Calculated mean', 'Arguments' : 'number1 - First value or reference.number2 - [optional] Second value or reference.', 'Syntax' : '=GEOMEAN(number1, [number2], ...)' },
'HARMEAN' : { 'Summary' : 'The Excel HARMEAN function returns the harmonic mean for a set of numeric values. The harmonic mean is the reciprocal of the arithmetic mean of reciprocals. Harmonic mean can be used to calculate a mean that reduces the impact of large outliers.', 'Purpose' : 'Calculate harmonic mean', 'Return value' : 'Calculated mean', 'Arguments' : 'number1 - First value or reference.number2 - [optional] Second value or reference.', 'Syntax' : '=HARMEAN(number1, [number2], ...)' },
'INTERCEPT' : { 'Summary' : 'The Excel INTERCEPT function returns the point at which a regression line will intersect the y-axis based on known x and y values.', 'Purpose' : 'Get intercept of linear regression line', 'Return value' : 'y-axis intercept value', 'Arguments' : 'known_ys - An array or range of numeric data points (dependent values).known_xs - An array or range of numeric data points (independent values).', 'Syntax' : '=INTERCEPT(known_ys, known_xs)' },
'LARGE' : { 'Summary' : 'The Excel LARGE function returns a numeric value based on its position in a list when sorted by value in descending order. In other words, LARGE can retrieve the "nth largest" value  1st largest value, 2nd largest value, 3rd largest value, etc.', 'Purpose' : 'Get nth largest value', 'Return value' : 'The nth largest value in an array.', 'Arguments' : 'array - An array or range of numeric values.k - Position as an integer, where 1 corresponds to the largest value.', 'Syntax' : '=LARGE(array, k)' },
'LINEST' : { 'Summary' : 'The Excel LINEST function returns statistics for a best fit straight line through supplied x and y values. The values returned by LINEST include slope, intercept, standard error values, and more. To find the best fit of a line to the data, LINEST uses the "least squares" method.', 'Purpose' : 'Get parameters of linear trend', 'Return value' : 'Array of values', 'Arguments' : 'known_ys - An array or range of dependent y values values.known_xs - [optional] An array or range of independent x values.const - [optional] Boolean - normal or force the constant b to equal 0. Default is TRUE = normal calculation.stats - [optional] Boolean - return additional statistics. Default is FALSE = slope and intercept only.', 'Syntax' : '=LINEST(known_ys, [known_xs], [const], [stats])' },
'MAX' : { 'Summary' : 'The Excel MAX function returns the largest numeric value in the data provided. MAX ignores empty cells, the logical values TRUE and FALSE, and text values.', 'Purpose' : 'Get the largest value', 'Return value' : 'The largest value in supplied data', 'Arguments' : 'number1 - Number, reference to numeric value, or range that contains numeric values.number2 - [optional] Number, reference to numeric value, or range that contains numeric values.', 'Syntax' : '=MAX(number1, [number2], ...)' },
'MAXA' : { 'Summary' : 'The Excel MAXA function returns the largest numeric value in a range of values. The MAXA function ignores empty cells, but evaluates the logical values TRUE and FALSE as 1 and 0, and evaluates text as zero.', 'Purpose' : 'Return largest value.', 'Return value' : 'Largest numeric value', 'Arguments' : 'value1 - Number, reference to numeric value, or range that contains numeric values.value2 - [optional] Number, reference to numeric value, or range that contains numeric values.', 'Syntax' : '=MAXA(value1, [value2], ...)' },
'MAXIFS' : { 'Summary' : 'The Excel MAXIFS function returns the largest numeric value that meets one or more criteria in a range of values. MAXIFS can be used with criteria based on dates, numbers, text, and other conditions. MAXIFS supports logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Get maximum value with criteria', 'Return value' : 'Maximum value', 'Arguments' : 'max_range - Range of values used to determine maximum.range1 - The first range to evaluate.criteria1 - The criteria to use on range1.range2 - [optional] The second range to evaluate.criteria2 - [optional] The criteria to use on range2.', 'Syntax' : '=MAXIFS(max_range, range1, criteria1, [range2], [criteria2], ...)' },
'MEDIAN' : { 'Summary' : 'The Excel MEDIAN function returns the median (middle number) in the supplied set of data. For example, =MEDIAN(1,2,3,4,5) returns 3.', 'Purpose' : 'Get the median of a group of numbers', 'Return value' : 'A number representing the median.', 'Arguments' : 'number1 - A number or cell reference that refers to numeric values.number2 - [optional] A number or cell reference that refers to numeric values.', 'Syntax' : '=MEDIAN(number1, [number2], ...)' },
'MIN' : { 'Summary' : 'The Excel MIN function returns the smallest numeric value in the data provided. The MIN function ignores empty cells, the logical values TRUE and FALSE, and text values.', 'Purpose' : 'Get the smallest value.', 'Return value' : 'The smallest value in supplied data', 'Arguments' : 'number1 - Number, reference to numeric value, or range that contains numeric values.number2 - [optional] Number, reference to numeric value, or range that contains numeric values.', 'Syntax' : '=MIN(number1, [number2], ...)' },
'MINA' : { 'Summary' : 'The Excel MINA function returns the smallest numeric value in a range of values. The MINA function ignores empty cells, but evaluates the logical values TRUE and FALSE as 1 and 0, and evaluates text as zero when these values appear in a range or cell reference.', 'Purpose' : 'Return smallest value.', 'Return value' : 'Smallest numeric value', 'Arguments' : 'value1 - Number, reference to numeric value, or range that contains numeric values.value2 - [optional] Number, reference to numeric value, or range that contains numeric values.', 'Syntax' : '=MINA(value1, [value2], ...)' },
'MINIFS' : { 'Summary' : 'The Excel MINIFS function returns the smallest numeric value that meets one or more criteria in a range of values. MINIFS can be used with criteria based on dates, numbers, text, and other conditions. MINIFS supports logical operators (>,<,<>,=) and wildcards (*,?) for partial matching.', 'Purpose' : 'Get minimum value with criteria', 'Return value' : 'Minimim value', 'Arguments' : 'min_range - Range of values used to determine minimum.range1 - The first range to evaluate.criteria1 - The criteria to use on range1.range2 - [optional] The second range to evaluate.criteria2 - [optional] The criteria to use on range2.', 'Syntax' : '=MINIFS(min_range, range1, criteria1, [range2], [criteria2], ...)' },
'MODE' : { 'Summary' : 'The Excel MODE function returns the most frequently occurring number in a numeric data set. For example, =MODE(1,2,4,4,5,5,5,6) returns 5.', 'Purpose' : 'Get most frequently occurring number', 'Return value' : 'A number representing the mode.', 'Arguments' : 'number1 - A number or cell reference that refers to numeric values.number2 - [optional] A number or cell reference that refers to numeric values.', 'Syntax' : '=MODE(number1, [number2], ...)' },
'MODE.MULT' : { 'Summary' : 'The Excel MODE.MULT function returns an array of the most frequently occurring numbers in a numeric data set. For example, =MODE.MULT(1,2,3,3,4,5,5) returns {3;5}, because there are two modes, 3 and 5.', 'Purpose' : 'Get most frequently occurring numbers', 'Return value' : 'Numbers representing mode(s)', 'Arguments' : 'number1 - A number or cell reference that refers to numeric values.number2 - [optional] A number or cell reference that refers to numeric values.', 'Syntax' : '=MODE.MULT(number1, [number2], ...)' },
'MODE.SNGL' : { 'Summary' : 'The Excel MODE.SNGL function returns the most frequently occurring number in a numeric data set. For example, =MODE.SNGL(1,2,4,4,5,5,5,6) returns 5.', 'Purpose' : 'Get most frequently occurring number', 'Return value' : 'A number representing the mode.', 'Arguments' : 'number1 - A number or cell reference that refers to numeric values.number2 - [optional] A number or cell reference that refers to numeric values.', 'Syntax' : '=MODE.SNGL(number1, [number2], ...)' },
'NORM.INV' : { 'Summary' : 'The Excel NORM.INV function returns the inverse of the normal cumulative distribution for the specified mean and standard deviation. Given the probability of an event occurring below a threshold value, the function returns the threshold value associated with the probability.', 'Purpose' : 'Get the inverse of normal cumulative distribution', 'Return value' : 'The threshold value associated with a probability', 'Arguments' : 'probability - The probability of an event occurring below a threshold.mean - The mean of the distribution.standard_dev - The standard deviation of the distribution.', 'Syntax' : '=NORM.INV(probability, mean, standard_dev)' },
'NORM.S.DIST' : { 'Summary' : 'The Excel NORM.S.DIST function returns output for the standard normal cumulative distribution (CDF) and the standard normal probability density function (PDF).', 'Purpose' : 'Get the standard normal CDF and PDF.', 'Return value' : 'The standard normal cumulative distribution function', 'Arguments' : 'z - Numeric z-score value.cumulative - Logical value that determines the form of the function.', 'Syntax' : '=NORM.S.DIST(z, cumulative)' },
'NORM.S.INV' : { 'Summary' : 'The Excel NORM.S.INV function returns the inverse of the standard normal cumulative distribution.', 'Purpose' : 'Get inverse of the standard normal cumulative distribution', 'Return value' : 'Returns the threshold value of a probability.', 'Arguments' : 'probability - A probability corresponding to the standard normal distribution.', 'Syntax' : '=NORM.S.INV(probability)' },
'PERCENTILE' : { 'Summary' : 'The Excel PERCENTILE function calculates the "kth percentile" for a set of data. A percentile is a value below which a given percentage of values in a data set fall. You can use PERCENTILE to determine the 90th percentile, the 80th percentile, etc.', 'Purpose' : 'Get kth percentile', 'Return value' : 'Calculated percentile for k', 'Arguments' : 'array - Data values.k - Number representing kth percentile.', 'Syntax' : '=PERCENTILE(array, k)' },
'PERCENTILE.EXC' : { 'Summary' : 'The Excel PERCENTILE.EXC function calculates the "kth percentile" for a set of data where k is 0 to 1. A percentile is a value below which a given percentage of values in a data set fall. You can use PERCENTILE.EXC to determine the 90th percentile, the 80th percentile, etc.', 'Purpose' : 'Get kth percentile', 'Return value' : 'Calculated percentile for k', 'Arguments' : 'array - Data values.k - A value between 0 and 1 that represents the k:th percentile.', 'Syntax' : '=PERCENTILE.EXC(array, k)' },
'PERCENTILE.INC' : { 'Summary' : 'The Excel PERCENTILE.INC function calculates the "kth percentile" for a set of data where k is 0 to 1, inclusive. A percentile is a value below which a given percentage of values in a data set fall. You can use PERCENTILE.INC to determine the 90th percentile, the 80th percentile, etc.', 'Purpose' : 'Get kth percentile', 'Return value' : 'Calculated percentile for k', 'Arguments' : 'array - Data values.k - Number representing kth percentile.', 'Syntax' : '=PERCENTILE.INC(array, k)' },
'PERCENTRANK' : { 'Summary' : 'The Excel PERCENTRANK function returns the rank of a value in a data set as a percentage of the data set. You can use PERCENTRANK to find the relative standing of a value within a data set. Percentile rank is commonly used as a way to interpret standing in standardized tests.', 'Purpose' : 'Get percentile rank, inclusive', 'Return value' : 'Calculated rank as a decimal value', 'Arguments' : 'array - Array of data values.x - Value to rank.significance - [optional] Number of significant digits in result. Defaults to 3.', 'Syntax' : '=PERCENTRANK(array, x, [significance])' },
'PERCENTRANK.EXC' : { 'Summary' : 'The Excel PERCENTRANK.EXC function returns the relative rank of a value in a data set as a percentage representing how many values are less than or equal to the value. Percentile rank is commonly used as a way to interpret standing in standardized tests.', 'Purpose' : 'Get percentile rank, exclusive', 'Return value' : 'Calculated rank as a decimal value', 'Arguments' : 'array - Array of data values.x - Value to rank.significance - [optional] Number of significant digits in result. Defaults to 3.', 'Syntax' : '=PERCENTRANK.EXC(array, x, [significance])' },
'PERCENTRANK.INC' : { 'Summary' : 'The Excel PERCENTRANK.INC function returns the relative rank of a value in a data set as a percentage representing the number of values less than or equal to the value. Percentile rank is commonly used as a way to interpret standing in standardized tests.', 'Purpose' : 'Get percentile rank, inclusive', 'Return value' : 'Calculated rank as a decimal value', 'Arguments' : 'array - Array of data values.x - Value to rank.significance - [optional] Number of significant digits in result. Defaults to 3.', 'Syntax' : '=PERCENTRANK.INC(array, x, [significance])' },
'PERMUT' : { 'Summary' : 'The Excel PERMUT function returns the number of permutations (combinations where order is significant) for a given number of items. The PERMUT function does not allow repetitions. To allow permutations with repetitions, use the PERMUTATIONA function.', 'Purpose' : 'Get number of permutations without repetitions', 'Return value' : 'Number of permutations as an integer', 'Arguments' : 'number - The total number of items.number_chosen - The number of items in each combination.', 'Syntax' : '=PERMUT(number, number_chosen)' },
'PERMUTATIONA' : { 'Summary' : 'The Excel PERMUTATIONA function returns the number of permutations (combinations where order is significant) for a given number of items. The PERMUTATIONA function allows repetitions. To calculate the number of permutations without repetitions, use the PERMUT function.', 'Purpose' : 'Get number of permutations with repetitions', 'Return value' : 'Number of permutations as an integer', 'Arguments' : 'number - The total number of items.number_chosen - The number of items in each combination.', 'Syntax' : '=PERMUTATIONA(number, number_chosen)' },
'QUARTILE' : { 'Summary' : 'The Excel QUARTILE function returns the quartile (each of four equal groups) for a given set of data. QUARTILE can return minimum value, first quartile, second quartile, third quartile, and max value.', 'Purpose' : 'Get the quartile in a data set', 'Return value' : 'Value for requested quartile', 'Arguments' : 'array - A reference containing data to analyze.quart - The quartile value to return.', 'Syntax' : '=QUARTILE(array, quart)' },
'QUARTILE.EXC' : { 'Summary' : 'The Excel QUARTILE.EXC function returns the quartile for a given set of data. QUARTILE.EXC can return, first quartile, second quartile, and third quartile.', 'Purpose' : 'Get the quartile in a data set', 'Return value' : 'Value for requested quartile', 'Arguments' : 'array - A reference containing data to analyze.quart - The quartile value to return, 1-3.', 'Syntax' : '=QUARTILE.EXC(array, quart)' },
'QUARTILE.INC' : { 'Summary' : 'The Excel QUARTILE.INC function returns the quartile (each of four equal groups) for a given set of data. QUARTILE.INC can return minimum value, first quartile, second quartile, third quartile, and max value. Starting with Excel 2010, the QUARTILE.INC function replaces the QUARTILE function with the same behavior.', 'Purpose' : 'Get the quartile in a data set', 'Return value' : 'Value for requested quartile', 'Arguments' : 'array - A reference containing data to analyze.quart - The quartile value to return.', 'Syntax' : '=QUARTILE.INC(array, quart)' },
'RANK' : { 'Summary' : 'The Excel RANK function returns the rank of a numeric value when compared to a list of other numeric values. RANK can rank values from largest to smallest (i.e. top sales) as well as smallest to largest (i.e. fastest time).', 'Purpose' : 'Rank a number against a range of numbers', 'Return value' : 'A number that indicates rank.', 'Arguments' : 'number - The number to rank.ref - The range that contains numbers to rank against.order - [optional] Whether to rank in ascending or descending order.', 'Syntax' : '=RANK(number, ref, [order])' },
'RANK.AVG' : { 'Summary' : 'The Excel RANK.AVG function returns the rank of a number against a list of other other numeric values. When values contain duplicates, the RANK.AVG function will assign an average rank to each set of duplicates.', 'Purpose' : 'Rank a number against a range of numbers', 'Return value' : 'A number that indicates rank.', 'Arguments' : 'number - The number to rank.ref - An array that contains the numbers to rank against.order - [optional] Rank ascending or descending. Default is zero.', 'Syntax' : '=RANK.AVG(number, ref, [order])' },
'RANK.EQ' : { 'Summary' : 'The Excel RANK.EQ function returns the rank of a number against a list of other other numeric values. When values contain duplicates, RANK.EQ will assign the higher rank to each set of duplicates.', 'Purpose' : 'Rank a number against a range of numbers', 'Return value' : 'A number that indicates rank.', 'Arguments' : 'number - The number to rank.ref - An array that contains the numbers to rank against.order - [optional] Rank ascending or descending. Default is zero.', 'Syntax' : '=RANK.EQ(number, ref, [order])' },
'SKEW' : { 'Summary' : 'The Excel SKEW function returns the skewness of a distribution, which is a measure of symmetry. A positive result indicates a distribution that tails off to the right. A negative result indicates a distribution that tails off to the left. ', 'Purpose' : 'Get skewness of a distribution', 'Return value' : 'A positive or negative value', 'Arguments' : 'number1 - A range or reference that contains numeric values.number2 - [optional] A range or reference that contains numeric values.', 'Syntax' : '=SKEW(number1, [number2], ...)' },
'SKEW.P' : { 'Summary' : 'The Excel SKEW.P function returns the skewness of a distribution, which is a measure of symmetry. A positive result indicates a distribution that tails off to the right. A negative result indicates a distribution that tails off to the left. ', 'Purpose' : 'Get skewness of a distribution based on population', 'Return value' : 'A positive or negative value', 'Arguments' : 'number1 - A range or reference that contains numeric values.number2 - [optional] A range or reference that contains numeric values.', 'Syntax' : '=SKEW.P(number1, [number2], ...)' },
'SLOPE' : { 'Summary' : 'The Excel SLOPE function returns the slope of a regression line based on known y values and known x values. A regression line is a "best fit" line based on known data points.', 'Purpose' : 'Get slope of linear regression line', 'Return value' : 'Calculated slope as a number', 'Arguments' : 'known_ys - An array or range of numeric data points (dependent values).known_xs - An array or range of numeric data points (independent values).', 'Syntax' : '=SLOPE(known_ys, known_xs)' },
'SMALL' : { 'Summary' : 'The Excel SMALL function returns a numeric value based on its position in a list when sorted by value in ascending order. In other words, SMALL can return the "nth smallest" value (1st smallest value, 2nd smallest value, 3rd smallest value, etc.) from a set of numeric data.', 'Purpose' : 'Get nth smallest value', 'Return value' : 'The nth smallest value in the array.', 'Arguments' : 'array - An array or range of numeric values.k - Position as an integer, where 1 corresponds to the smallest value.', 'Syntax' : '=SMALL(array, k)' },
'STANDARDIZE' : { 'Summary' : 'The Excel STANDARDIZE function returns a normalized value (z-score) based on the mean and standard deviation.', 'Purpose' : 'Calculate a normalized value (z-score)', 'Return value' : 'Normalized value', 'Arguments' : 'x - The value to normalize.mean - The arithmetic mean of the distribution.standard_dev - The standard deviation of the distribution.', 'Syntax' : '=STANDARDIZE(x, mean, standard_dev)' },
'STDEV' : { 'Summary' : 'The Excel STDEV function returns the standard deviation for data that represents a sample. To calculate the standard deviation for an entire population, use STDEVP or STDEV.P.', 'Purpose' : 'Get the standard deviation in a sample', 'Return value' : 'Estimated standard deviation', 'Arguments' : 'number1 - First number or reference in the sample.number2 - [optional] Second number or reference.', 'Syntax' : '=STDEV(number1, [number2], ...)' },
'STDEV.P' : { 'Summary' : 'The Excel STDEV.P function calculates the standard deviation for a sample set of data. STDEV.P calculates standard deviation using the "n" method, ignoring logical values and text.', 'Purpose' : 'Get standard deviation of population', 'Return value' : 'Estimated standard deviation', 'Arguments' : 'number1 - First number or reference in the sample.number2 - [optional] Second number or reference.', 'Syntax' : '=STDEV.P(number1, [number2], ...)' },
'STDEV.S' : { 'Summary' : 'The Excel STDEV.S function calculates the standard deviation for a sample set of data. STDEV.S replaces the older STDEV function, with the same behavior.', 'Purpose' : 'Get the standard deviation in a sample', 'Return value' : 'Estimated standard deviation', 'Arguments' : 'number1 - First number or reference in the sample.number2 - [optional] Second number or reference.', 'Syntax' : '=STDEV.S(number1, [number2], ...)' },
'STDEVA' : { 'Summary' : 'The Excel STDEVA function calculates standard deviation for a sample of data. Unlike the STDEV function, STDEVA will evaluate text and logicals that appear in references. To calculate standard deviation for an entire population, use STDEVPA or STDEV.P.', 'Purpose' : 'Get standard deviation in a sample', 'Return value' : 'Estimated standard deviation', 'Arguments' : 'number1 - First number or reference in the sample.number2 - [optional] Second number or reference.', 'Syntax' : '=STDEVA(number1, [number2], ...)' },
'STDEVP' : { 'Summary' : 'The STDEVP function calculates the standard deviation for data that represents a population. STDEVP has been replaced with a newer function called STDEV.P, which has the same behavior.', 'Purpose' : 'Get standard deviation of population', 'Return value' : 'Estimated standard deviation', 'Arguments' : 'number1 - First number or reference in the sample.number2 - [optional] Second number or reference.', 'Syntax' : '=STDEVP(number1, [number2], ...)' },
'STDEVPA' : { 'Summary' : 'The Excel STDEVPA function calculates the standard deviation for an entire population. Unlike the STDEVP function, STDEVPA evaluates text and logicals that appear in references. To calculate standard deviation for a sample, use STDEVA or STDEV.S.', 'Purpose' : 'Get standard deviation for a population', 'Return value' : 'Calculated standard deviation', 'Arguments' : 'number1 - First number or reference in the sample.number2 - [optional] Second number or reference.', 'Syntax' : '=STDEVPA(number1, [number2], ...)' },
'TRIMMEAN' : { 'Summary' : 'The Excel TRIMMEAN function calculates mean (average) while excluding outliers. The number of data points to exclude is provided as a percentage.', 'Purpose' : 'Calculate mean excluding outliers', 'Return value' : 'Calculated mean', 'Arguments' : 'array - Values to trim and average.percent - The number of data points to exclude from the calculation.', 'Syntax' : '=TRIMMEAN(array, percent)' },
'VAR' : { 'Summary' : 'The Excel VAR function estimates the variance of a sample of data. If data represents the entire population, use the VARP function or the newer VAR.P function. VAR ignores text values and logicals in references.', 'Purpose' : 'Get variation of a sample', 'Return value' : 'Computed variance', 'Arguments' : 'number1 - First number or reference.number2 - [optional] Second number or reference.', 'Syntax' : '=VAR(number1, [number2], ...)' },
'VAR.P' : { 'Summary' : 'The Excel VAR.P function returns the variance in an entire population. If data represents a sample of the population, use the VAR.S function.', 'Purpose' : 'Get variation of population', 'Return value' : 'Computed variance', 'Arguments' : 'number1 - First number or reference.number2 - [optional] Second number or reference.', 'Syntax' : '=VAR.P(number1, [number2], ...)' },
'VAR.S' : { 'Summary' : 'The Excel VAR.S function returns the variance of a sample. If data represents the entire population, use the VAR.P function. VAR.S ignores text values and logicals in references.', 'Purpose' : 'Get variation of a sample', 'Return value' : 'Computed variance', 'Arguments' : 'number1 - First number or reference.number2 - [optional] Second number or reference.', 'Syntax' : '=VAR.S(number1, [number2], ...)' },
'VARA' : { 'Summary' : 'The Excel VARA function estimates the variance of a sample of data. Unlike the VAR function, the VARA function evaluates text values and logicals in references.', 'Purpose' : 'Get variation of a sample', 'Return value' : 'Computed variance', 'Arguments' : 'number1 - First number or reference.number2 - [optional] Second number or reference.', 'Syntax' : '=VARA(number1, [number2], ...)' },
'VARP' : { 'Summary' : 'The Excel VARP function calculates the variance of an entire population of data. If data represents a sample, use the VAR function or the newer VAR.S function. VARP ignores text values and logicals in references.', 'Purpose' : 'Get variation of a population', 'Return value' : 'Computed variance', 'Arguments' : 'number1 - First number or reference.number2 - [optional] Second number or reference.', 'Syntax' : '=VARP(number1, [number2], ...)' },
'VARPA' : { 'Summary' : 'The Excel VARPA function computes the variance of a population of data. Unlike the VARP function, the VARPA function evaluates text values and logicals in references.', 'Purpose' : 'Get variation of a population', 'Return value' : 'Computed variance', 'Arguments' : 'number1 - First number or reference.number2 - [optional] Second number or reference.', 'Syntax' : '=VARPA(number1, [number2], ...)' },
'ENCODEURL' : { 'Summary' : 'The Excel ENCODEURL function returns a URL-encoded string composed of US-ASCII characters. ENCODEURL is only available in Excel 2013 and later on Windows.', 'Purpose' : 'Get URL-encoded string', 'Return value' : 'Encoded text', 'Arguments' : 'text - The text to be encoded.', 'Syntax' : '=ENCODEURL(text)' },
'FILTERXML' : { 'Summary' : 'The Excel FILTERXML function returns specific data from XML text using the specified XPath expression.', 'Purpose' : 'Get data from XML with Xpath', 'Return value' : 'Matching data as text', 'Arguments' : 'xml - Valid XML as a text string.xpath - A valid Xpath expression as a text string.', 'Syntax' : '=FILTERXML(xml, xpath)' },
'DAVERAGE' : { 'Summary' : 'The Excel DAVERAGE function returns the average in a given field for records that match criteria. ', 'Purpose' : 'Get average from matching records', 'Return value' : 'The average value in a given field', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DAVERAGE(database, field, criteria)' },
'DCOUNT' : { 'Summary' : 'The Excel DCOUNT function counts matching records in a database using criteria and an optional field. When a field is provided DCOUNT will only count numeric values in the field. Use DCOUNTA to count numbers or text values in a given field.', 'Purpose' : 'Count matching records in a database', 'Return value' : 'Numeric count of matching records', 'Arguments' : 'database - Database range including headers.field - [optional] Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DCOUNT(database, [field], criteria)' },
'DCOUNTA' : { 'Summary' : 'The Excel DCOUNTA function counts matching records in a database using criteria and an optional field. When a field is provided, DCOUNTA counts both numeric and text values when the field value is not empty. Use DCOUNT to count only numeric values in a given field.', 'Purpose' : 'Count matching records in a database', 'Return value' : 'Numeric count of matching records', 'Arguments' : 'database - Database range including headers.field - [optional] Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DCOUNTA(database, [field], criteria)' },
'DGET' : { 'Summary' : 'The Excel DGET function gets a single value in a given field from a record that matches criteria. DGET will throw the #NUM error if more than one record matches criteria.', 'Purpose' : 'Get value from matching record', 'Return value' : 'The value in a given field', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DGET(database, field, criteria)' },
'DMAX' : { 'Summary' : 'The Excel DMAX function returns the maximum value in a field, from a set of records that match criteria. Use the DMIN function to get the minimum value.', 'Purpose' : 'Get max from matching records', 'Return value' : 'The maximum value in a given field', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DMAX(database, field, criteria)' },
'DMIN' : { 'Summary' : 'The Excel DMIN function returns the minimum value in a field, from a set of records that match criteria. Use the MAX function to get the maximum value.', 'Purpose' : 'Get min from matching records', 'Return value' : 'The minimum value in a given field', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DMIN(database, field, criteria)' },
'DPRODUCT' : { 'Summary' : 'The Excel DPRODUCT function returns the product of values from a set of records that match criteria. The values to multiply are extracted from a given field in the database, specified as an argument.', 'Purpose' : 'Get product from matching records', 'Return value' : 'The calculated product', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DPRODUCT(database, field, criteria)' },
'DSTDEV' : { 'Summary' : 'The Excel DSTDEV function returns the standard deviation of sample data extracted from records that match the given criteria. If data represents the entire population, use the DSTDEVP function.', 'Purpose' : 'Get standard deviation of sample in matching records', 'Return value' : 'The calculated standard deviation', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DSTDEV(database, field, criteria)' },
'DSTDEVP' : { 'Summary' : 'The Excel DSTDEVP function returns the standard deviation for an entire population of data extracted from records that match the given criteria. If data represents the entire population, use the DSTDEVP function.', 'Purpose' : 'Get standard deviation of population in matching records', 'Return value' : 'The calculated standard deviation', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DSTDEVP(database, field, criteria)' },
'DSUM' : { 'Summary' : 'The Excel DSUM function returns the sum of values from a set of records that match criteria. The values to sum are extracted from a given field in the database.', 'Purpose' : 'Get sum from matching records', 'Return value' : 'The calculated sum', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DSUM(database, field, criteria)' },
'DVAR' : { 'Summary' : 'The Excel DVAR function returns the variance of a sample extracted from records that match the given criteria. If data represents the entire population, use the DVARP function.', 'Purpose' : 'Get sample variance for matching records', 'Return value' : 'The calculated variance', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DVAR(database, field, criteria)' },
'DVARP' : { 'Summary' : 'The Excel DVARP function returns the variance of an entire population extracted from records that match given criteria. If data represents the a sample only, use the DVAR function.', 'Purpose' : 'Get population variance for matching records', 'Return value' : 'The calculated variance', 'Arguments' : 'database - Database range including headers.field - Field name or index to count.criteria - Criteria range including headers.', 'Syntax' : '=DVARP(database, field, criteria)' },
}

